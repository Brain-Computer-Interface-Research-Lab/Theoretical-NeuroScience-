%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: mrwE1.dvi
%%CreationDate: Sun Oct 24 12:46:06 2010
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Palatino-Italic Palatino-Bold Palatino-Roman Helvetica
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -f -V mrwE1
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.10.24:1245
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (mrwE1.dvi)
@start /Fa 141[19 114[{TeXBase1Encoding ReEncodeFont}1
58.1154 /Helvetica rf /Fb 140[23 23 114[{TeXBase1Encoding ReEncodeFont}
2 58.1154 /Palatino-Italic rf
%DVIPSBitmapFont: Fd txtt 10 27
/Fd 27 119 df<000001C000000FC000007FC00001FFC00003FFC0000FFF00001FF80000
3FE000007F800000FF000001FE000001FC000003F8000007F0000007F000000FE000000F
E000001FC000001FC000003F8000003F8000003F8000007F0000007F0000007F0000007F
0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE
000000FE000000FE000000FE000000FE000000FE0000007F0000007F0000007F0000007F
0000003F0000003F8000003F8000001F8000001FC000001FC000000FE000000FE0000007
F0000003F8000003FC000001FE000000FF0000007F8000003FC000001FF000000FFE0000
07FFC00001FFC000007FC000001FC0000003C01A4274B72C>40 D<E0000000FE000000FF
800000FFE00000FFF000001FFC000007FE000001FF0000007F8000003FC000001FE00000
0FE0000007F0000003F8000003F8000001FC000000FC000000FE000000FE0000007F0000
007F0000007F0000003F8000003F8000003F8000003F8000001F8000001FC000001FC000
001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000001FC000
001FC000001FC000003F8000003F8000003F8000003F8000003F0000007F0000007F0000
007E000000FE000000FE000001FC000001FC000003F8000007F0000007F000000FE00000
1FC000007F800000FF000003FE00000FFC0000FFF80000FFF00000FFC00000FF000000F8
0000001A427BB72C>I<FFC0FFC0FFC0FFC0FFC0FFC0FFC0FFC0FFC0FFC00FC00FC00F80
0F801F801F003F00FE00FC00F800E0000A156F892C>44 D<FFC0FFC0FFC0FFC0FFC0FFC0
FFC0FFC0FFC0FFC00A0A6F892C>46 D<0003F80000001FFF0000007FFFC00000FFFFE000
01FFFFF00003FE07F80007F803FC0007FC01FC000FFC00FE000FFE007E001FFE007F001F
FE003F003FFF003F803F3F001F803F3F001F807F3F801FC07F1F801FC07F1F801FC07E1F
C00FC07E0FC00FC0FE0FC00FE0FE0FE00FE0FE07E00FE0FE07F00FE0FE03F00FE0FE03F0
0FE0FE03F80FE0FE01F80FE0FE01F80FE0FE01FC0FE0FE00FC0FE0FE00FC0FE0FE007E0F
E0FE007E0FE07E007E0FC07E003F0FC07F003F1FC07F003F9FC07F001F9FC03F001F9F80
3F801FDF803F800FFF801F800FFF001FC007FF001FC007FF000FE007FE0007F003FC0007
F803FC0003FE07F80001FFFFF00000FFFFE000007FFFC000001FFF00000007FC00002336
7CB42C>48 D<00030000001F0000007F000001FF00000FFF00003FFF0000FFFF0000FFFF
0000FF7F0000F87F0000E07F0000007F0000007F0000007F0000007F0000007F0000007F
0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F
0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F
0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F
0000007F0000007F0000007F0000007F0000FFFFFFC0FFFFFFC0FFFFFFC0FFFFFFC0FFFF
FFC01A3575B42C>I<00FFE0000FFFFC007FFFFF007FFFFF807FFFFFC07F807FE07E001F
F07E000FF07E0007F87E0003F8000003FC000001FC000001FC000001FC000001FC000001
FC000001FC000001FC000003F8000003F8000007F8000007F000000FE000001FE000001F
C000003F8000007F000000FE000001FC000003F8000007F000000FE000001FC000003F80
00007F000000FE000001FC000003FC000003F8000007F000000FE000001FE000001FC000
FC3F8000FC7F8000FC7F8000FCFF0000FCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFF
FCFFFFFFFC1E357AB42C>I<0007FC0000003FFF800000FFFFE00001FFFFF00003FFFFF8
0007F80FFC000FE003FC000FC001FC001FC000FE001F8000FE001F8000FE001F8000FE00
1F8000FE001F8000FE001F8000FC001FC000FC001FC001FC000FE001F8000FF003F80007
FC07F00007FE0FE00003FFBFC00001FFFF800000FFFE0000007FFC000000FFFF000001FF
FF800003FBFFC00007F0FFF0000FE03FF8001FC01FFC003F8007FC003F8003FE007F0001
FF007F0000FF007E0000FF00FE00007F80FE00007F80FE00003F80FE00003F80FE00003F
80FE00003F80FF00003F80FF00007F007F00007F007F8000FF003FC001FE003FE003FC00
1FF80FFC000FFFFFF80007FFFFE00003FFFFC00000FFFF0000000FF8000021367AB42C>
56 D<FFFFFFFFFCFFFFFFFFFCFFFFFFFFFCFFFFFFFFFCFFFFFFFFFC0000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000FFFFFFFFFCFFFFFFFFFCFFFFFFFFFCFFFFFFFFFC
FFFFFFFFFC26167D9F2C>61 D<FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC00
00FC0000FC0000FC0000FC0000FC0000FFFFF8FFFFF8FFFFF8FFFFF8FFFFF8154270B72C
>91 D<FFFFFCFFFFFCFFFFFCFFFFFCFFFFFC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC0000FC
0000FC0000FCFFFFFCFFFFFCFFFFFCFFFFFCFFFFFC16427AB72C>93
D<001FFC000001FFFF80000FFFFFE0001FFFFFF0001FFFFFF0001FE01FF8001E0007F800
180003F800000003FC00000001FC00000001FC00000001FC00000001FC00000001FC0000
0001FC00000001FC000007FFFC00007FFFFC0001FFFFFC0007FFFFFC000FFE01FC001FF0
01FC003FC001FC007F8001FC007F0001FC007F0001FC00FE0001FC00FE0001FC00FE0001
FC00FE0001FC00FE0001FC00FF0003FC00FF000FFC007F801FFE007FE07F7E003FFFFE7F
F01FFFFC3FF00FFFF03FF003FFC01FF800FF0007E025287BA62C>97
D<0000FFE0000007FFFF00003FFFFF80007FFFFF8001FFFFFF8003FF803F8007FE000F80
0FF8000F801FF0000F801FE00000003FC00000003F800000007F800000007F000000007F
00000000FF00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00
000000FE00000000FE00000000FF000000007F000000007F000000007F800000003FC000
00003FC00000001FE00000001FF00000000FFC00004007FF0003C003FFE01FC001FFFFFF
C000FFFFFFC0003FFFFFC00007FFFF000000FFE00022287BA62C>99
D<000007FF80000007FF80000007FF80000007FF80000007FF800000003F800000003F80
0000003F800000003F800000003F800000003F800000003F800000003F800000003F8000
00003F800000003F800000003F80000FE03F80007FFC3F8000FFFE3F8003FFFFBF8007FF
FFFF8007FC1FFF800FF003FF801FE001FF801FC000FF803F80007F803F80003F803F0000
3F807F00003F807F00003F807F00003F807E00003F80FE00003F80FE00003F80FE00003F
80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80FE00003F80
FF00003F807F00007F807F00007F807F0000FF807F8001FF803FC007FF803FE00FFF801F
F03FBF801FFFFF3FFC0FFFFE3FFC07FFFC3FFC03FFF83FFC00FFE03FFC001F0000002639
7CB72C>I<0003FE0000001FFFC000007FFFE00000FFFFF80003FFFFF80007FC07FC0007
F801FE000FE000FE001FC000FF001FC0007F003F80007F003F80003F807F00003F807F00
003F807F00003F80FF00003F80FF00003F80FFFFFFFF80FFFFFFFF80FFFFFFFF80FFFFFF
FFC0FFFFFFFFC0FE00000000FE00000000FE00000000FF000000007F000000007F000000
007F800000003F800000003FC00000001FE00000001FF00000400FFC0003C007FF803FC0
03FFFFFFC001FFFFFFC0007FFFFFC0001FFFFE000001FFC00022287BA62C>I<000001FF
E000000FFFFE00003FFFFE00007FFFFE0000FFFFFE0001FF807E0003FE00060003FC0000
0003F800000007F000000007F000000007F000000007E00000000FE00000000FE0000000
0FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000003FFF
FFFF803FFFFFFF803FFFFFFF803FFFFFFF803FFFFFFF80000FE00000000FE00000000FE0
0000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000
00000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000
000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE0000000
0FE00000FFFFFFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE00FFFFFFFE0027397AB82C>I<
FFF000000000FFF000000000FFF000000000FFF000000000FFF00000000007F000000000
07F00000000007F00000000007F00000000007F00000000007F00000000007F000000000
07F00000000007F00000000007F00000000007F00000000007F00000000007F007F80000
07F01FFE000007F07FFF800007F0FFFF800007F1FFFFC00007F3FFFFE00007F7F03FE000
07FFC01FE00007FF800FF00007FF000FF00007FE0007F00007FC0007F00007F80007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F000FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0
FFFFC0FFFFC0FFFFC0FFFFC02A387FB72C>104 D<001FF000001FF000001FF000001FF0
00001FF000001FF000001FF000001FF000001FF000000000000000000000000000000000
0000000000000000000000000000000000000000007FFFE0007FFFE0007FFFE0007FFFE0
007FFFE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE0
00000FE000000FE000FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC1E387AB72C>I<
0000F801F800FFC1FC07FC00FFC3FE0FFE00FFC7FF1FFE00FFCFFF1FFE00FFDFFF3FFF00
0FDF3F3C7F000FFC1FF83F000FF81FF03F000FF81FF03F000FF01FE03F000FE01FC03F00
0FE01FC03F000FC01F803F000FC01F803F000FC01F803F000FC01F803F000FC01F803F00
0FC01F803F000FC01F803F000FC01F803F000FC01F803F000FC01F803F000FC01F803F00
0FC01F803F000FC01F803F000FC01F803F000FC01F803F000FC01F803F000FC01F803F00
0FC01F803F000FC01F803F000FC01F803F000FC01F803F00FFFC1FF83FF0FFFC1FF83FF0
FFFC1FF83FF0FFFC1FF83FF0FFFC1FF83FF02C2780A62C>109 D<000007F80000FFF81F
FE0000FFF87FFF8000FFF8FFFFC000FFF9FFFFC000FFF9FFFFE00003FBFCFFE00003FFE0
1FE00003FFC00FF00003FF800FF00003FF0007F00003FE0007F00003FC0007F00003F800
07F00003F80007F00003F80007F00003F80007F00003F80007F00003F80007F00003F800
07F00003F80007F00003F80007F00003F80007F00003F80007F00003F80007F00003F800
07F00003F80007F00003F80007F00003F80007F00003F80007F00003F80007F00003F800
07F00003F80007F00003F80007F000FFFFE007FFC0FFFFE007FFC0FFFFE007FFC0FFFFE0
07FFC0FFFFE007FFC02A277FA62C>I<0007FE0000003FFFC00000FFFFF00001FFFFF800
03FFFFFC0007FE07FE000FF001FF001FE0007F801FC0003F803FC0003FC03F80001FC07F
80001FE07F00000FE07F00000FE07F00000FE0FE000007F0FE000007F0FE000007F0FE00
0007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F0FE000007F07F0000
0FE07F00000FE07F00000FE07F80001FE03F80001FC03FC0003FC01FC0003F801FE0007F
800FF001FF0007FE07FE0003FFFFFC0001FFFFF80000FFFFF000003FFFC0000007FE0000
24287CA62C>I<00000FF800FFF03FFE00FFF07FFF00FFF1FFFF80FFF1FFFFC0FFF3FFFF
E007F7E03FE007FFC00FF007FF000FF007FE0007F807FC0003F807F80003F807F80003F8
07F00003FC07F00001FC07F00001FC07F00001FC07F00001FC07F00001FC07F00001FC07
F00001FC07F00001FC07F00001FC07F00001FC07F00001F807F00003F807F00003F807F0
0003F807F00003F007F00007F007F80007F007FC000FE007FE001FE007FF003FC007FFE0
FF8007FFFFFF8007F7FFFF0007F1FFFC0007F0FFF80007F01FC00007F000000007F00000
0007F000000007F000000007F000000007F000000007F000000007F0000000FFFF800000
FFFF800000FFFF800000FFFF800000FFFF80000026357EA62C>I<0000007FE03FFF01FF
F83FFF07FFF83FFF0FFFF83FFF1FFFF83FFF3FFFF8007F7F80F8007FFE00F8007FF800F8
007FF000F8007FE000F8007FC000F8007F800000007F000000007F000000007F00000000
7F000000007F000000007F000000007F000000007F000000007F000000007F000000007F
000000007F000000007F000000007F000000007F000000007F000000007F000000007F00
0000007F000000007F000000007F000000FFFFFFE000FFFFFFE000FFFFFFE000FFFFFFE0
00FFFFFFE00025277DA62C>114 D<003FFC0001FFFFE007FFFFF81FFFFFF83FFFFFF83F
E007F87F0001F87E0001F8FE0001F8FC000000FC000000FE000000FE000000FF8000007F
E000007FFC00003FFF80001FFFF8000FFFFF0003FFFFC000FFFFF0001FFFF80003FFFC00
003FFE000007FE000001FF000000FF0000007F0000007FF800007FF800007FF80000FEF8
0001FEF80003FEFF801FFCFFFFFFF8FFFFFFF0FFFFFFC01FFFFF0000FFF000202879A62C
>I<007F000000007F000000007F000000007F000000007F000000007F000000007F0000
00007F000000FFFFFFF800FFFFFFF800FFFFFFF800FFFFFFF800FFFFFFF800007F000000
007F000000007F000000007F000000007F000000007F000000007F000000007F00000000
7F000000007F000000007F000000007F000000007F000000007F000000007F000000007F
000000007F000000007F000000007F000000007F000000007F000000007F000000007F00
0000007F000000007F800000003F800000003FC00000003FF003C0001FFFFFC0000FFFFF
C00007FFFFC00003FFFFC000007FFE00222E7BAC2C>I<FFF000FFF000FFF000FFF000FF
F000FFF000FFF000FFF000FFF000FFF00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F0000FF00007
F0000FF00007F0001FF00007F0003FF00007F8007FF00007F801FFF00003FE03FFF00003
FFFFF7F00003FFFFE7FF8001FFFFC7FF8000FFFF87FF80007FFF07FF80003FFC07FF8000
07E000000029277FA52C>I<FFFC003FFFFFFC003FFFFFFC003FFFFFFC003FFFFFFC003F
FF0FE00007F00FE00007F007F00007E007F0000FE007F0000FC003F8000FC003F8001FC0
01FC001F8001FC003F8001FC003F0000FE003F0000FE007F00007E007E00007F00FE0000
7F00FC00003F00FC00003F81FC00003F81F800001FC1F800001FC3F800000FC3F000000F
E7F000000FE7E0000007E7E0000007FFE0000007FFC0000003FFC0000003FF80000001FF
80000001FF80000001FF00000000FF00000000FE000028267EA52C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe rpxsc 10 5
/Fe 5 117 df<001FE0000000FFFC000003E03F000007000F80000F8007E0001FC003F0
001FE003F0001FE001F8001FE001F8001FE000FC000FC000FC00078000FC00000000FC00
000000FC00000000FC00000000FC0000007FFC000007FFFC00003FE0FC0000FE00FC0003
F800FC000FF000FC001FC000FC003FC000FC007F8000FC007F0000FC007F0000FC0CFE00
00FC0CFE0000FC0CFE0000FC0CFE0001FC0CFE0001FC0CFF0003FC0C7F00077C0C7F8006
3E183FC01E3E180FE0781FF003FFF00FE0007F8007C026277DA52A>97
D<03F0000000FFF0000000FFF0000000FFF00000000FF000000003F000000003F0000000
03F000000003F000000003F000000003F000000003F000000003F000000003F000000003
F000000003F000000003F000000003F000000003F000000003F000000003F000000003F0
1FE00003F07FF80003F1E03E0003F3801F8003F7000FC003FE0007E003FC0003F003F800
01F803F00001F803F00000FC03F00000FC03F00000FE03F00000FE03F000007E03F00000
7F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F03F000007F
03F000007F03F000007F03F000007E03F00000FE03F00000FE03F00000FC03F00001FC03
F80001F803F80003F003FC0003F003EE0007E003C6000FC003C7801F000381E07E000300
FFF80000001FC000283B7EB92E>I<03F000FFF000FFF000FFF0000FF00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F000
03F00003F00003F00003F00003F00003F00003F00003F00003F00003F00003F00007F800
FFFFC0FFFFC0FFFFC0123A7EB917>108 D<03F00FF0001FE000FFF03FFC007FF800FFF0
F03F01E07E00FFF1C01F83803F000FF3800FC7001F8003F7000FCE001F8003FE000FDC00
1F8003FC0007F8000FC003FC0007F8000FC003F80007F0000FC003F80007F0000FC003F8
0007F0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E000
0FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC003F0
0007E0000FC003F00007E0000FC003F00007E0000FC003F00007E0000FC007F8000FF000
1FE0FFFFC1FFFF83FFFFFFFFC1FFFF83FFFFFFFFC1FFFF83FFFF40257EA445>I<001800
000018000000180000001800000018000000380000003800000038000000780000007800
000078000000F8000001F8000003F8000007F800001FFFFF00FFFFFF00FFFFFF0001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
0001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800
C001F800C001F800C001F800C001F800C001F800C001F800C001F800C001F800C000FC01
C000FC0180007C0380007E0300003F0700000FFE000001F8001A347FB220>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff pxex 10 1
/Ff 1 83 df<0000000001FC00000000000FFF00000000003FFFC0000000007E0FE00000
0000FC0FE000000001F80FF000000003F00FF000000003E007F000000007E007F0000000
07C001E00000000FC000000000000FC000000000001F8000000000001F8000000000001F
8000000000003F8000000000003F0000000000003F0000000000003F0000000000007F00
00000000007F0000000000007F0000000000007F000000000000FF000000000000FF0000
00000000FE000000000000FE000000000000FE000000000000FE000000000000FE000000
000000FE000000000001FE000000000001FE000000000001FE000000000001FE00000000
0001FE000000000001FE000000000001FE000000000001FE000000000001FE0000000000
01FE000000000001FE000000000001FE000000000001FE000000000001FE000000000003
FE000000000003FC000000000003FC000000000003FC000000000003FC000000000003FC
000000000003FC000000000003FC000000000003FC000000000003FC000000000003FC00
0000000003FC000000000003FC000000000003FC000000000003FC000000000003FC0000
00000007F8000000000007F8000000000007F8000000000007F8000000000007F8000000
000007F8000000000007F8000000000007F8000000000007F8000000000007F800000000
0007F8000000000007F0000000000007F0000000000007F0000000000007F00000000000
07F0000000000007F0000000000007F0000000000007F0000000000007F0000000000007
F000000000000FE000000000000FE000000000000FE000000000000FE000000000000FE0
00000000000FE000000000000FE000000000000FC000000000000FC000000000000FC000
000000000FC000000000000F8000000000000F8000000000000F8000000000001F000000
0000001F0000000000001F0000000000001E0000000078003E00000000FC003C00000000
FE003C00000000FF007800000000FF00F0000000007F01F0000000007F07E0000000003F
FF80000000000FFF000000000003F80000000000346E7B7F22>82
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg pxsy 10 3
/Fg 3 34 df<FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF82D047B9738>
0 D<0000000000080000000000380000000000F80000000007F8000000001FF800000000
7FF000000001FF8000000007FE000000001FF8000000007FE000000001FF8000000007FE
000000003FF800000000FFC000000003FF000000000FFC000000003FF000000000FFC000
000003FF000000000FFC000000003FF000000000FF8000000000FFC0000000003FF00000
00000FFE0000000003FF8000000000FFE0000000001FF80000000007FE0000000001FF80
000000007FE0000000001FFC0000000007FF0000000001FFC0000000007FF0000000000F
FC0000000003FF0000000000FFC0000000003FF8000000000FF80000000003F800000000
00F800000000001800000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFF
FFF8FFFFFFFFFFF82D377BB138>20 D<0000000000000080000000000000000001C00000
00000000000003E0000000000000000001F0000000000000000001F80000000000000000
00FC0000000000000000007E0000000000000000003F0000000000000000001F80000000
00000000001FC000000000000000000FE0000000000000000007F0000000000000000003
F8000000000000000003FC000000000000000001FE000000000000000000FF00FFFFFFFF
FFFFFFFFFF80FFFFFFFFFFFFFFFFFFC0FFFFFFFFFFFFFFFFFF80FFFFFFFFFFFFFFFFFF00
0000000000000000FE000000000000000001FC000000000000000003F800000000000000
0003F0000000000000000007E000000000000000000FC000000000000000001F80000000
00000000003F0000000000000000007E0000000000000000007C000000000000000000F8
000000000000000001F0000000000000000003E0000000000000000001E0000000000000
000000C000004A237BA754>33 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh rpxr 7 1
/Fh 1 44 df<000380000003800000038000000380000003800000038000000380000003
8000000380000003800000038000000380000003800000038000FFFFFFFEFFFFFFFEFFFF
FFFE00038000000380000003800000038000000380000003800000038000000380000003
800000038000000380000003800000038000000380001F1F7C9E27>43
D E
%EndDVIPSBitmapFont
/Fi 135[30 3[19 25 23 1[35 32 8[19 28 3[29 46[29 1[29
48[{TeXBase1Encoding ReEncodeFont}11 58.1154 /Palatino-Roman
rf
%DVIPSBitmapFont: Fj rpxmi 10 5
/Fj 5 63 df<03FFFFFFFFFC0FFFFFFFFFFC1FFFFFFFFFFC3FFFFFFFFFFC3FFFFFFFFFE0
3E03C00007007803C0000F00700380001E00E00380001E00C00780003C00C00780003C00
800780007800000700007800000F0000F800000F0000F000000F0000F000000F0001F000
001E0001F000001E0001F000001E0003E000003E0003E000003E0003E000003C0003E000
003C0003E000007C0007E000007C0007E000007C0007E00000F80007E00000F80007E000
00F80007E00001F80007F00001F00007F00001F00007F00003F00007F80403E00003FC1C
07E00003FFF807E00003FFE007E00001FFC00F800000FF000C0000007C002E287CA636>
25 D<0FFFFFFFF01FFFFFFFE01FFFFFFFE03FFFFFFFE03F801E00003C003C000038003C
000070003C0000700078000060007800006000780000C000F80000C000F00000C000F000
008001F000000001F000000001E000000003E000000003E000000003E000000003E00000
0007C000000007C000000007C000000007C000000007C00000000FC00000000FC0000000
0FC00000000FC00000000FC00000000FC00000000FE00C00000FE01C00000FF878000007
FFE0000007FFC0000003FF00000001F8000024277CA52B>28 D<0007003F01FF01FE01FE
03FC03FC03F803F807F007E007E00FC00FC01F801F003E003E007C007800F800E0008000
10177E8915>59 D<000003E0000003E0000003C0000007C0000007C00000078000000F80
00000F8000000F0000001F0000001F0000001E0000001E0000003E0000003C0000003C00
00007C0000007C00000078000000F8000000F8000000F0000001F0000001F0000001E000
0003E0000003E0000003C0000007C0000007C0000007800000078000000F8000000F0000
000F0000001F0000001F0000001E0000003E0000003E0000003C0000007C0000007C0000
0078000000F8000000F8000000F0000001F0000001F0000001E0000001E0000003E00000
03C0000003C0000007C0000007C00000078000000F8000000F8000000F0000001F000000
1F0000001E0000003E0000003E0000003C0000007C0000007C0000007800000078000000
F8000000F0000000F00000001B497ABA27>61 D<C00000000000F00000000000FE000000
0000FF8000000000FFE0000000001FF80000000007FE0000000001FF80000000007FE000
0000001FF80000000007FF0000000001FFC0000000003FF0000000000FFC0000000003FF
0000000000FFC0000000003FF0000000000FFC0000000003FF8000000000FFE000000000
1FF80000000007F8000000001FF8000000007FE000000003FF800000000FFE000000003F
F000000000FFC000000003FF000000000FFC000000003FF000000000FFC000000007FF00
0000001FFC000000007FE000000001FF8000000007FE000000001FF8000000007FE00000
0000FF8000000000FE0000000000F80000000000E000000000002D2B7BAB38>I
E
%EndDVIPSBitmapFont
/Fk 141[28 114[{TeXBase1Encoding ReEncodeFont}1 83.022
/Helvetica rf
%DVIPSBitmapFont: Fl rpxr 10 5
/Fl 5 62 df<000000300000000000007800000000000078000000000000780000000000
00FC000000000000FC000000000001FC000000000001FE000000000001FE000000000003
FF000000000003FF0000000000077F0000000000073F80000000000E3F80000000000E3F
C0000000001E1FC0000000001C1FC0000000001C0FE000000000380FE0000000003807F0
000000007007F0000000007007F800000000F003F800000000E003FC00000001E001FC00
000001C001FC00000001C001FE000000038000FE000000038000FF0000000780007F0000
000700007F8000000F00003F8000000E00003F8000001E00003FC000001E00001FC00000
1C00001FE000003C00000FE000003800000FF000007800000FF0000078000007F00000F0
000007F80000F0000007F80001E0000003FC0001E0000003FC0001E0000001FE0003C000
0001FE0003C0000001FE0007C0000000FF000780000000FF000F800000007F800F000000
007F801F000000007FC01F000000003FC03E000000003FE03E000000003FE07FFFFFFFFF
FFF07FFFFFFFFFFFF0FFFFFFFFFFFFF8353A7EB939>1 D<00000FC00003E000003FF000
0FF00000FFF0003FF00001FFF0007FF00003FFF000FFF0000781F001E0700007007001C0
30000E0000038000001E0000078000003C00000F0000007C00001F0000007C00001F0000
00FC00003F000000FC00003F000000FC00003F000001FC00007F000001FC00007F000001
FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC
00007F000001FC00007F000003FFFF80FFFFE00FFFFF03FFFFE07FFFFF1FFFFFC07FFFFF
1FFFFFC001FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC0000
7F000001FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC00007F
000001FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC00007F00
0001FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC00007F0000
01FC00007F000001FC00007F000001FC00007F000001FC00007F000001FC00007F000001
FC00007F000001FC00007F000001FC00007F000003FE0000FF8000FFFFF83FFFFE00FFFF
F83FFFFE00FFFFF83FFFFE00343C7EBB32>11 D<00000FC00003E000000000003FF0000F
F00000000000FFF0003FF00000000001FFF0007FF00780000003FFF000FFF01FC0000007
81F001E0701FE0000007007001C0303FE000000E00000380003FE000001E00000780003F
E000003C00000F00001FE000007C00001F00001FC000007C00001F00000F800000FC0000
3F000000000000FC00003F000000000000FC00003F000000000001FC00007F0000000000
01FC00007F000000000001FC00007F000000000001FC00007F000000000001FC00007F00
0000000001FC00007F000000000001FC00007F000000C00001FC00007F000003C00001FC
00007F00003FC00003FFFF80FFFFC7FFC0000FFFFF03FFFFCFFFC0007FFFFF1FFFFFCFFF
C0007FFFFF1FFFFF803FC00001FC00007F00001FC00001FC00007F00001FC00001FC0000
7F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC000
01FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00
001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC
00007F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00001F
C00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC0000
7F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC000
01FC00007F00001FC00001FC00007F00001FC00001FC00007F00001FC00001FC00007F00
001FC00003FE0000FF80003FE000FFFFF83FFFFE0FFFFF80FFFFF83FFFFE0FFFFF80FFFF
F83FFFFE0FFFFF80493C7EBB4C>14 D<00000F80000000000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F800000FFFF
FFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF800000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000000000
0F80000000000F80000000000F80000000000F80000000000F80000000000F8000002D2D
7BAC38>43 D<FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF8FFFFFFFFFFF82D157BA038>61
D E
%EndDVIPSBitmapFont
/Fm 133[42 46 43 69 47 50 27 35 33 46 50 45 48 73 24
46 19 24 48 46 28 40 51 37 46 42 3[28 1[28 3[83 1[65
51 44 55 1[50 1[69 79 3[28 69 63 46 51 64 59 51 65 1[37
4[21 42 42 42 42 42 42 42 42 42 42 1[21 28 21 2[28 28
2[70 33[50 50 2[{TeXBase1Encoding ReEncodeFont}65 83.022
/Palatino-Roman rf /Fn 139[33 1[39 1[61 7[61 2[50 3[50
29[72 17[50 49[{TeXBase1Encoding ReEncodeFont}8 99.6264
/Palatino-Bold rf /Fo 135[60 4[53 47 8[40 3[60 1[53 29[73
69[{TeXBase1Encoding ReEncodeFont}7 119.552 /Palatino-Bold
rf /Fp 139[28 32 14[42 18[65 2[65 26[42 42 42 49[{
TeXBase1Encoding ReEncodeFont}8 83.022 /Palatino-Italic
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 3257 70 a Fp(1)p 600 103 2699 4
v 600 333 a Fo(Exercises)600 606 y Fn(Chapter)24 b(1)704
797 y Fm(1.)41 b(Generate)18 b(spikes)h(for)g(10)f(s)h(\(or)f(longer)i
(if)e(you)i(want)f(better)f(statistics\))h(using)808
897 y(a)h(Poisson)j(spike)e(generator)g(with)h(a)e(constant)i(rate)e
(of)h(100)f(Hz,)g(and)h(r)o(ecor)o(d)808 996 y(their)e(times)h(of)f
(occurr)o(ence.)27 b(Compute)20 b(the)f(coe)p Fl(\016)p
Fm(cient)h(of)f(variation)h(of)f(the)808 1096 y(interspike)30
b(intervals,)h(and)e(the)h(Fano)g(factor)f(for)h(spike)g(counts)g
(obtained)808 1195 y(over)18 b(counting)j(intervals)e(ranging)g(fr)o
(om)g(1)g(to)g(100)f(ms.)29 b(Plot)19 b(the)h(interspike)808
1295 y(interval)g(histogram.)704 1461 y(2.)41 b(Add)23
b(a)h(r)o(efractory)f(period)h(to)h(the)g(Poisson)h(spike)f(generator)f
(by)h(allowing)808 1561 y(the)30 b(\002ring)i(rate)e(to)h(depend)f(on)h
(time.)60 b(Initially)-9 b(,)33 b(set)e(the)g(\002ring)g(rate)f(to)h(a)
808 1660 y(constant)g(value,)h Fk(r)p Fm(\()p Fp(t)p
Fm(\))k Fl(=)g Fk(r)1672 1672 y Fi(0)1705 1660 y Fm(.)59
b(After)29 b(every)h(spike,)k(set)c Fk(r)p Fm(\()p Fp(t)p
Fm(\))g(to)h(0,)h(and)f(then)808 1760 y(allow)24 b(it)g(to)g(r)o
(ecover)f(exponentially)h(back)f(to)h Fk(r)2347 1772
y Fi(0)2404 1760 y Fm(with)h(a)e(time)h(constant)h Fj(\034)3227
1773 y Fi(r)o(ef)808 1860 y Fm(that)h(contr)o(ols)h(the)g(r)o
(efractory)e(r)o(ecovery)h(rate.)46 b(In)27 b(other)f(wor)o(ds,)i(have)
e Fk(r)p Fm(\()p Fp(t)p Fm(\))808 1959 y(obey)20 b(the)h(equation)1810
2108 y Fj(\034)1853 2121 y Fi(r)o(ef)1936 2052 y Fp(d)p
Fk(r)p 1936 2088 70 5 v 1936 2165 a Fp(dt)2038 2108 y
Fl(=)i Fk(r)2145 2120 y Fi(0)2196 2108 y Fg(\000)18 b
Fk(r)808 2284 y Fm(except)23 b(immediately)h(after)e(a)i(spike,)g(when)
h(it)f(is)g(set)g(to)g(0.)38 b(Plot)24 b(the)g(coe)p
Fl(\016)p Fm(-)808 2383 y(cient)d(of)g(variation)h(as)f(a)g(function)h
(of)f Fj(\034)2080 2396 y Fi(r)o(ef)2175 2383 y Fm(over)g(the)h(range)e
(1)h(ms)h Fg(\024)i Fj(\034)3043 2396 y Fi(r)o(ef)3140
2383 y Fg(\024)d Fm(20)808 2483 y(ms,)d(and)g(plot)h(interspike)f
(interval)g(histograms)h(for)f(a)g(few)g(di)p Fl(\013)p
Fm(er)o(ent)f(values)808 2582 y(of)27 b Fj(\034)951 2595
y Fi(r)o(ef)1052 2582 y Fm(in)h(this)g(range.)49 b(Compute)28
b(the)f(Fano)h(factor)f(for)g(spike)h(counts)g(ob-)808
2682 y(tained)21 b(over)h(counting)h(intervals)f(ranging)g(fr)o(om)g(1)
f(to)i(100)d(ms)j(for)f(the)g(case)808 2782 y Fj(\034)851
2795 y Fi(r)o(ef)947 2782 y Fl(=)h Fm(10)c(ms.)704 2948
y(3.)41 b(Compute)25 b(autocorr)o(elation)g(histograms)h(of)f(spike)h
(trains)f(generated)f(by)h(a)808 3047 y(Poisson)k(generator)f(with)h(a)
f(constant)h(\002ring)g(rate)e(of)h(100)f(Hz,)j(a)d(constant)808
3147 y(\002ring)i(rate)g(of)g(100)e(Hz)i(together)h(with)g(a)e(r)o
(efractory)g(period)g(modeled)h(as)808 3247 y(in)37 b(exer)o(cise)f(2)g
(with)i Fj(\034)1571 3260 y Fi(r)o(ef)1690 3247 y Fl(=)45
b Fm(10)36 b(ms,)42 b(and)36 b(a)h(variable)e(\002ring)j(rate)e
Fk(r)p Fm(\()p Fp(t)p Fm(\))44 b Fl(=)808 3346 y Fm(100\(1)16
b Fl(+)i Fm(cos\(2)p Fj(\031)p Fp(t)p Fj(=)p Fm(25)h(ms\)\))h(Hz.)29
b(Plot)21 b(the)g(histograms)h(over)e(a)h(range)f(fr)o(om)g(0)808
3446 y(to)h(100)e(ms.)704 3612 y(4.)41 b(Generate)35
b(a)h(Poisson)i(spike)e(train)h(with)g(a)e(time-dependent)h(\002ring)h
(rate)808 3712 y Fk(r)p Fm(\()p Fp(t)p Fm(\))21 b Fl(=)i
Fm(100\(1)13 b Fl(+)j Fm(cos\(2)p Fj(\031)p Fp(t)p Fj(=)p
Fm(300)i(ms)q(\)\))g(Hz.)28 b(Appr)o(oximate)19 b(the)g(\002ring)i
(rate)d(fr)o(om)808 3811 y(this)j(spike)g(train)g(using)g(a)g(variable)
e Fk(r)2006 3823 y Fi(appr)o(ox)2213 3811 y Fm(that)i(satis\002es)1598
4061 y Fj(\034)1641 4073 y Fi(appr)o(ox)1838 3992 y Fp(d)p
Fk(r)1908 4004 y Fi(appr)o(ox)p 1838 4041 256 5 v 1931
4118 a Fp(dt)2127 4061 y Fl(=)h Fg(\000)p Fk(r)2289 4073
y Fi(appr)o(ox)2489 4061 y Fj(;)808 4269 y Fm(except)32
b(that)i Fk(r)1283 4281 y Fi(appr)o(ox)1511 4269 y Fg(!)41
b Fk(r)1664 4281 y Fi(appr)o(ox)1876 4269 y Fl(+)25 b
Fm(1)p Fj(=\034)2081 4281 y Fi(appr)o(ox)2301 4269 y
Fm(every)33 b(time)h(a)f(spike)h(occurs.)808 4369 y(Make)27
b(plots)i(of)g(the)f(tr)o(ue)h(rate,)g(the)f(spike)h(sequence)g
(generated,)g(and)f(the)808 4469 y(estimated)33 b(rate.)69
b(Experiment)34 b(with)h(a)f(few)g(di)p Fl(\013)p Fm(er)o(ent)g(values)
g(of)g Fj(\034)3113 4481 y Fi(appr)o(ox)808 4568 y Fm(in)h(the)h(range)
f(of)g(1)g(to)h(100)e(ms.)73 b(Determine)36 b(the)g(best)f(value)g(of)g
Fj(\034)3113 4580 y Fi(appr)o(ox)808 4683 y Fm(by)27
b(computing)h(the)f(average)f(squar)o(ed)g(err)o(or)g(of)h(the)g
(estimate,)2944 4605 y Ff(R)3015 4683 y Fp(dt)p Fm(\()p
Fk(r)p Fm(\()p Fp(t)p Fm(\))19 b Fg(\000)808 4794 y Fk(r)836
4806 y Fi(appr)o(ox)1022 4794 y Fm(\()p Fp(t)p Fm(\)\))1134
4764 y Fi(2)1166 4794 y Fm(,)35 b(for)e(di)p Fl(\013)p
Fm(er)o(ent)g(values)f(of)h Fj(\034)2125 4806 y Fi(appr)o(ox)2312
4794 y Fm(,)j(and)d(\002nding)g(the)h(value)e(of)808
4894 y Fj(\034)851 4906 y Fi(appr)o(ox)1058 4894 y Fm(that)21
b(minimizes)h(this)f(err)o(or)-6 b(.)704 5060 y(5.)41
b(For)35 b(a)f(constant)i(rate)e(Poisson)j(pr)o(ocess,)h(every)c
(speci\002c)h(\(up)g(to)g(a)f(\002nite)808 5159 y(r)o(esolution\))17
b(sequence)h(of)f Fp(N)i Fm(spikes)f(occurring)g(over)f(a)g(given)h
(time)f(interval)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 602 70 a Fp(2)p 602 103 2699 4
v 808 333 a Fm(is)19 b(equally)f(likely)-9 b(.)29 b(This)19
b(seems)g(paradoxical)e(because)h(we)g(certainly)h(do)f(not)808
432 y(expect)25 b(to)i(see)f(all)g Fp(N)i Fm(spikes)f(appearing)e
(within)j(the)f(\002rst)f(1\045)g(of)g(the)h(time)808
532 y(interval.)h(Resolve)21 b(this)h(paradox.)704 698
y(6.)41 b(Build)16 b(an)h(appr)o(oximate)e(white-noise)j(stimulus)g(by)
f(choosing)h(random)f(val-)808 798 y(ues)29 b(at)h(discr)o(ete)f(times)
h(separated)e(by)i(a)g(time-step)f(interval)h Fl(\001)p
Fp(t)p Fm(.)56 b(Plot)31 b(its)808 897 y(autocorr)o(elation)13
b(function)i(and)e(power)h(spectr)o(um)g(\(use)g(the)g
Fe(m)-8 b(at)7 b(l)16 b(a)5 b(b)3018 930 y @beginspecial
153 @llx 149 @lly 161 @urx 157 @ury 80 @rwi @setspecial
%%BeginDocument: tmR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 149 161 157 
%%Title: tmR.eps
%%Creator: Canvas 
%%CreationDate: Monday, July 16, 2001
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: Palatino-Roman
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def/mo{dup dhOdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
mark /___FN3 /Palatino-Roman dup 1 rf
F debug
0 id
1 fd
0 306 translate
1 -1 scale
%%EndSetup
/DeviceRGB scs
0. fg
0.125 0.125 sp
1 lc
50. lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:2 Text
0. fg
stm
7. fts
/___FN3 cvsf
0. fg
F sa
155. 154.7399 mt
(\250) show
T sa
rtm
%%DSIEndObject
terminate
showpage

%%EndDocument
 @endspecial 3109 897 a Fm(func-)808 997 y(tion)28 b
Fd(spectrum)c Fm(or)j Fd(psd)p Fm(\).)47 b(Discuss)28
b(how)h(well)e(this)h(stimulus)h(matches)e(an)808 1096
y(ideal)20 b(white-noise)h(stimulus)h(given)f(the)g(value)f(of)h
Fl(\001)p Fp(t)g Fm(you)g(used.)704 1262 y(7.)41 b(Consider)15
b(a)h(model)g(with)g(a)f(\002ring)i(rate)e(determined)g(in)h(terms)g
(of)g(a)f(stimulus)808 1362 y Fp(s)p Fm(\()p Fp(t)p Fm(\))20
b(by)g(integrating)i(the)f(equation)1546 1595 y Fj(\034)1589
1607 y Fb(r)1626 1538 y Fp(d)p Fk(r)1696 1550 y Fi(est)1770
1538 y Fm(\()p Fp(t)p Fm(\))p 1626 1575 228 5 v 1705
1652 a Fp(dt)1886 1595 y Fl(=)i Fm([)p Fk(r)2021 1607
y Fi(0)2072 1595 y Fl(+)18 b Fp(s)p Fm(])2206 1607 y
Fh(+)2267 1595 y Fg(\000)g Fk(r)2369 1607 y Fi(est)2444
1595 y Fm(\()p Fp(t)p Fm(\))c Fj(;)808 1804 y Fm(wher)o(e)j
Fk(r)1082 1816 y Fi(0)1133 1804 y Fm(is)h(a)f(constant)i(that)f
(determines)g(the)g(backgr)o(ound)f(\002ring)h(rate)f(and)808
1904 y Fj(\034)851 1916 y Fb(r)902 1904 y Fl(=)24 b Fm(20)d(ms.)33
b(Drive)22 b(the)g(model)g(with)h(an)e(appr)o(oximate)g(white-noise)i
(stim-)808 2003 y(ulus.)39 b(Adjust)24 b(the)h(amplitude)f(of)g(the)g
(white-noise)h(and)f(the)h(parameter)d Fk(r)3267 2015
y Fi(0)808 2103 y Fm(so)e(that)g(r)o(ecti\002cation)g(is)h(not)g(a)e
(big)i(e)p Fl(\013)p Fm(ect)f(\(i.e.)f Fk(r)2339 2115
y Fi(0)2389 2103 y Fl(+)e Fp(s)23 b Fj(>)g Fm(0)d(most)h(of)f(the)g
(time\).)808 2202 y(Fr)o(om)14 b(the)g(r)o(esponses)g(of)g(the)h
(model,)g(compute)g(the)f(stimulus-r)o(esponse)h(cor)o(-)808
2302 y(r)o(elation)20 b(function,)h Fp(Q)1524 2314 y
Fa(r)p Fb(s)1570 2302 y Fm(.)28 b(Next,)21 b(generate)e(spikes)i(fr)o
(om)g(this)g(model)g(using)g(a)808 2402 y(Poisson)e(generator)e(with)h
(a)f(rate)g Fk(r)1912 2414 y Fi(est)1987 2402 y Fm(\()p
Fp(t)p Fm(\),)g(and)g(compute)h(the)f(spike-trigger)o(ed)808
2501 y(average)j(stimulus)j(fr)o(om)e(the)h(spike)h(trains)e(pr)o
(oduced)g(by)h(the)g(white-noise)808 2601 y(stimulus.)42
b(By)25 b(comparing)g(the)g(stimulus-r)o(esponse)h(corr)o(elation)e
(function)808 2701 y(with)29 b(the)g(spike-trigger)o(ed)e(average,)i
(verify)f(that)g(equation)h(1.22)e(is)i(satis-)808 2800
y(\002ed.)f(Examine)19 b(what)g(happens)g(if)h(you)f(set)h
Fk(r)2257 2812 y Fi(0)2313 2800 y Fl(=)i Fm(0,)d(so)h(that)g(the)f
(white-noise)808 2900 y(stimulus)j(becomes)e(half-wave)g(r)o
(ecti\002ed.)704 3066 y(8.)41 b Fe(m)-8 b(at)7 b(l)16
b(a)5 b(b)1063 3099 y @beginspecial 153 @llx 149 @lly
161 @urx 157 @ury 80 @rwi @setspecial
%%BeginDocument: tmR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 149 161 157 
%%Title: tmR.eps
%%Creator: Canvas 
%%CreationDate: Monday, July 16, 2001
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: Palatino-Roman
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def/mo{dup dhOdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
mark /___FN3 /Palatino-Roman dup 1 rf
F debug
0 id
1 fd
0 306 translate
1 -1 scale
%%EndSetup
/DeviceRGB scs
0. fg
0.125 0.125 sp
1 lc
50. lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:2 Text
0. fg
stm
7. fts
/___FN3 cvsf
0. fg
F sa
155. 154.7399 mt
(\250) show
T sa
rtm
%%DSIEndObject
terminate
showpage

%%EndDocument
 @endspecial 1154 3066 a Fm(\002le)22 b Fd(c1p8.mat)c
Fm(contains)23 b(data)d(collected)h(and)g(pr)o(ovided)g(by)g(Rob)808
3166 y(de)d(Ruyter)h(van)f(Steveninck)g(fr)o(om)h(a)f(\003y)h(H1)f
(neur)o(on)h(r)o(esponding)g(to)g(an)f(ap-)808 3265 y(pr)o(oximate)23
b(white-noise)i(visual)f(motion)i(stimulus.)40 b(Data)23
b(wer)o(e)g(collected)808 3365 y(for)17 b(20)g(minutes)i(at)e(a)h
(sampling)g(rate)f(of)h(500)e(Hz.)28 b(In)18 b(the)g(\002le,)g
Fd(rho)f Fm(is)h(a)f(vector)808 3464 y(that)e(gives)g(the)g(sequence)g
(of)g(spiking)h(events)f(or)h(nonevents)g(at)e(the)h(sampled)808
3564 y(times)20 b(\(every)e(2)i(ms\).)28 b(When)20 b(an)g(element)g(of)
f Fd(rho)g Fm(is)h(one,)g(this)g(indicates)g(the)808
3664 y(pr)o(esence)h(of)i(a)g(spike)g(at)f(the)h(corr)o(esponding)g
(time,)g(wher)o(eas)f(a)h(zer)o(o)f(value)808 3763 y(indicates)d(no)i
(spike.)29 b(The)20 b(variable)f Fd(stim)f Fm(gives)i(the)g(sequence)h
(of)f(stimulus)808 3863 y(values)j(at)g(the)i(sampled)e(times.)39
b(Calculate)22 b(and)i(plot)g(the)g(spike-trigger)o(ed)808
3963 y(average)h(fr)o(om)h(these)h(data)e(over)h(the)h(range)f(fr)o(om)
g(0)h(to)g(300)e(ms)i(\(150)e(time)808 4062 y(steps\).)j(\(Based)19
b(on)j(a)e(pr)o(oblem)h(fr)o(om)f(Sebastian)g(Seung.\))704
4228 y(9.)41 b(Using)30 b(the)g(data)f(of)h(pr)o(oblem)f(8,)j
(calculate)c(and)i(plot)g(stimulus)h(averages)808 4328
y(trigger)o(ed)13 b(on)j(events)f(consisting)i(of)e(a)g(pair)f(of)h
(spikes)g(\(which)h(need)f(not)g(nec-)808 4427 y(essarily)20
b(be)g(adjacent\))f(separated)g(by)i(a)f(given)g(interval)h(\(as)e(in)i
(\002gur)o(e)f(1.10\).)808 4527 y(Plot)c(these)g(two-spike-trigger)o
(ed)f(average)g(stimuli)i(for)f(various)f(separation)808
4627 y(intervals)25 b(ranging)g(fr)o(om)g(2)f(to)i(100)e(ms.)42
b(\(Hint:)c(in)26 b Fe(m)-8 b(at)7 b(l)16 b(a)5 b(b)2761
4660 y @beginspecial 153 @llx 149 @lly 161 @urx 157 @ury
80 @rwi @setspecial
%%BeginDocument: tmR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 149 161 157 
%%Title: tmR.eps
%%Creator: Canvas 
%%CreationDate: Monday, July 16, 2001
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: Palatino-Roman
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def/mo{dup dhOdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
mark /___FN3 /Palatino-Roman dup 1 rf
F debug
0 id
1 fd
0 306 translate
1 -1 scale
%%EndSetup
/DeviceRGB scs
0. fg
0.125 0.125 sp
1 lc
50. lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:2 Text
0. fg
stm
7. fts
/___FN3 cvsf
0. fg
F sa
155. 154.7399 mt
(\250) show
T sa
rtm
%%DSIEndObject
terminate
showpage

%%EndDocument
 @endspecial 2852 4627 a Fm(,)26 b(use)g(convo-)808 4726
y(lution)21 b(for)g(pattern)f(matching:)29 b(e.g.)20
b Fd(find\(conv\(rho,[1)37 b(0)44 b(1]\)==2\))17 b Fm(will)808
4826 y(contain)25 b(the)g(indices)g(of)g(all)g(the)g(events)g(with)h
(two)f(spikes)g(separated)f(by)g(4)808 4926 y(ms.\))54
b(Plot,)32 b(as)d(a)g(function)h(of)g(the)f(separation)g(between)g(the)
h(two)g(spikes,)808 5025 y(the)19 b(magnitude)h(of)f(the)h(di)p
Fl(\013)p Fm(er)o(ence)e(between)i(the)f(two-spike-trigger)o(ed)g(av-)
808 5125 y(erage)i(and)i(the)g(sum)h(of)e(two)i(single-spike-trigger)o
(ed)e(averages)g(\(obtained)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 3257 70 a Fp(3)p 600 103 2699 4
v 808 333 a Fm(in)20 b(exer)o(cise)e(8\))h(separated)e(by)j(the)g(same)
f(time)h(interval.)28 b(At)19 b(what)h(temporal)808 432
y(separation)f(does)h(this)h(di)p Fl(\013)p Fm(er)o(ence)f(become)g
(negligibly)h(small.)29 b(\(Based)19 b(on)h(a)808 532
y(pr)o(oblem)g(fr)o(om)g(Sebastian)g(Seung.\))662 698
y(10.)41 b(Using)20 b(the)h(data)e(of)h(pr)o(oblem)g(8,)f(\002nd)i(the)
f(spike-trigger)o(ed)f(average)g(stimu-)808 798 y(lus)24
b(for)g(events)f(that)h(contain)h(exactly)e(two)h(adjacent)g(spikes)g
(separated)e(by)808 897 y(various)28 b(di)p Fl(\013)p
Fm(er)o(ent)g(intervals)g(ranging)h(fr)o(om)f(2)g(to)h(100)e(ms)i
(\(e.g.)f(for)g(4)g(ms,)808 997 y(the)c(event)h Fd([1)43
b(0)g(1])24 b Fm(but)g(not)i(the)e(event)h Fd([1)43 b(1)g(1])p
Fm(\).)c(This)25 b(is)g(distinct)g(fr)o(om)808 1096 y(exer)o(cise)15
b(9)i(in)h(which)g(we)f(only)h(r)o(equir)o(ed)e(two)i(spikes)f
(separated)f(by)h(a)g(given)808 1196 y(interval,)h(but)i(did)e(not)i(r)
o(estrict)e(what)i(happened)e(between)h(the)g(two)h(spikes.)808
1296 y(Compar)o(e)i(r)o(esults)g(of)h(the)g(exclusive)g(case)f
(consider)o(ed)g(her)o(e)h(with)g(those)h(of)808 1395
y(the)18 b(inclusive)h(two-spike-trigger)o(ed)e(average)f(computed)j
(in)f(exer)o(cise)f(9.)28 b(In)808 1495 y(what)f(ways)g(and)g(why)h(ar)
o(e)d(they)j(di)p Fl(\013)p Fm(er)o(ent?)47 b(\(Based)26
b(on)i(a)f(pr)o(oblem)f(fr)o(om)808 1595 y(Sebastian)19
b(Seung.\))p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
