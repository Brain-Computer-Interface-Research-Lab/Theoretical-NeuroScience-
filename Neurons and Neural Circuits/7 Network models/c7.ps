%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: mrwE7.dvi
%%CreationDate: Thu Apr  4 21:58:47 2013
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Palatino-Italic Palatino-Bold Palatino-Roman Rpxmi Rpxr
%%+ Pxex Pxsy Rpxsc txtt
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -f mrwE7
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.04.04:2158
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: Pxsy
%!PS-AdobeFont-1.0: Pxsy 1.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 24558
20 dict begin
/FontInfo 16 dict dup begin
/version (1.0) readonly def
/FullName (Pxsy) readonly def
/FamilyName (Pxsy) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 1.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /Pxsy def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
dup 112 /radical put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-21 -994 1292 912}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363F39B548A806C44FEA1B6940CE940D9715AC10
A3E7AB0FA0A6414E9568953B7FC56D7431153CDCC1DA51CB651758F01C2BE266
586E297B3119AEE2A2D643C4C75FFC401D0B85884FDF6B65F382C4274641C911
1BFA560173294C16E51F7607EDD8C402A8ACE5B8A75A038676BBDE3F4AE2C6D0
730E2B3FB0CC04630315CDCC9BF39D39290EFAD8E9EA1FCDF306668E92EE17A5
CBAB3A002A1EBCB63229DFCFEF49A01BE67E3BD543F93939AEA1E6E37C5895AB
C2FF5420A85DA940710ACAB35F35180028DDD225C80CA839FAD8E1C82D893DAD
992EA335937B20173E98EBAC22AFD4E985B223B5CAB34E17C71A84E95BE89917
1588E375ACE0AA0523B68D01B72CA65B454DD9C68BC3536D0A6CE60A82BF96C8
6F4E8F55B85B70FBF0E2E679E0E6830A3154A16BD77D54B28C1C475F8895C6DD
CB161400C140DB743E60ED33AA83F37FD4D440CE121325A923EA9D473037AEF4
D10ECC54F943DA2FF24F2281711AD7E6F42D58A138020F2C214E6E6C5FAB6835
8E1CD4480EAD193A55D17766E680F2D44575830EA0297045DCD4B96896E51631
D35EAE39CCCA8D93E86FA542F90F1FA90B3E267FC316AD7EDA61AA6E7F67DC28
2CC53E3353B352014576858A26185B1F4F3F7DAD2F97862D504BA7D51168B9CE
D3F122FE4996B864FC7A3C69DA99315EE4BB4F3737487F32E615381BF247D955
C5135C94E231D6AF30CDA7DAC13CD3BAA34BD61E153D1F5D6E08642CA4A5BC70
17D9D40D4CBEA9CE954D590058E69743049B38B06D4801AFC7FD6B6A10D7D5EF
F8F02D373605EF9B17B68E6273E7D67A9212B1BCBB59B2CA13401BD6AD12AF3E
EEBDF4F30C45EECF9119DCD2642A30806D3A2CB715D4A9A5BE522B9C0A9D7045
005AFD3E440F566A6DCF28A6679D50C158BEBAC741A40A8BA66F5D7F12DE64E3
A937FEB18D75262DE038E89E98AAE48592AEA6CED584B0157F6BE62F76477767
0FA068D1B453034ECF47B8497ECCD88F313EBD16469AB8354EB6543DA92BA86B
634EBBF2EB565E5C392B190259CFB173EDA1A49BB15322793AD7CA44F59AC0D4
66E4E5B8BCDEECE892B49E2692550828C42A2A22D54339802F52469D3A988EC0
F388C84AE37816704B7563AE84ADE6E78691DA47E1A14053BAF5A61271EAFD11
8461F11155FEB12E8F9D4CDC1E93F2AD459E34FA10601E3A80ADAD03BC119FB2
F6D1603A92EA461238FFF85560375259ABBAD95060226C924E7F4B9374C6CD13
ED5F12AE9244765CF4E982A9F0171F86126F5AD6A39EC174F80922A0FCE441B3
75DC12E1BDDB537BFD87F1ACEC907E9C785B86DC15C674B8D8FBC8BECCEB1BC9
D9349E334DE400B646FF82079D0F60123C98816192A0792A8A526002C04FB7B1
148A7EEFD6F85259AB26B05D6CD700B7A537F305783518DBB4FAF968F6B1B03C
F3887D64A51EDCD25A8424A34DA73A385F9AF86E3780318245564170DBA07421
318A4E627F768149CE47C1B82E471836A4FFC01F2868D74A9F898647A5039B28
3186965C58FB824335778A72914EB3707E1E04A13946000C56AD88566B95D3E3
3B5999EB4F69BDBDDDFCF4306FFCF965A2FFCB94A0D02E732722A6FBE60C3C85
87FC576165A9DF35D58A89B32B96F9931F8B95BCCC25A16882F5799BB3E66708
8C0D651B0FA9E8103FD260766D6D876F4B86DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: txtt
%!PS-AdobeFont-1.0: txtt 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 21990
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (txtt) readonly def
/FamilyName (txtt) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /txtt def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 53 /five put
dup 55 /seven put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 122 /z put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-5 -183 542 746}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACA5D85BC6F2DC07E1913DE009E806C3EE8F3
FEC9E1C1A320C2124B06F5E41354C077F75C6EB18C1C637209CD429CF0A07147
4C4B3FB0D260C42F8BB83C7DB6A92ABCBC206C45E91E10AF52EEAB7427C2EEAF
00FE4361755860C83861E922F3F9B396CDDD72DCE20CAFF85B4DFC108C6E8C25
982D9DC0D680DD2CEF98217D81FFB183DCD10E43B628319EFD72F7122EF6666F
072C583DE41A93FC23CF88F3F1C2A7B9799E6D9769D870E78A808BCA3C4CAAB6
7D57FC42DE9172B531A5682D15FD0454B00EA7B1FE236C84DEAD6C47CEF9E29C
B87C40484A068D17E2699CF5A9BB31063FFB0FFEE686FF4748AE163D8176D07A
98B25358D28735507AA3A0668AA01B4E9B771DC247CED2999882DBC207D0A6FD
8D36CF73BCE42258E565435C7670CB5AD587E69A4A92F2B6A3DA1D85C7FC79C1
30434F0177EE46E0FA73157A7D2B03CFBC547F19463DEDA40ADFA324C8ADF66F
E2CAB83EF886170E2417CD3927C0F8D1859BD5B5D9350DA919E6FF195659591F
21DC0446228E2CEC18960F43A955045A930BF8D07481630EC3129072AEA5778A
13771E5610D8B84879A3CA2EA86C34348D4EC1FF9DE400B5BC84B19DCC1C1C28
50E3AFC8DCDF69DE0D02C7A99C338D75B5A4D9F917BE0FDD6D704EBF127D7F05
7F520F5F86CF5830BD0A090FB92D7E38EC2F7453CF308BF719E29AF44BE1FB00
4B396E9ED2E6F78D08128C27458E8752CF81699625FBB66DB7A83B5AB02DE21B
69AF49DB282E6761995198A51784F0F0D25CD62E8565E23B762B1EAEF24C71F5
AA1D44767B06A34C13E55980D62303AF6AB2AA45686062ED262E7FAAAFEA96BC
0E996263A912D0624B62027B82550FF935F7987487EC1C0E356463FCF69BECDA
6A4E9470BE01DE39500F7889E719259B5CD0C6CE5B96AC5687A4B5096739A4CD
B74ACA53E30FF8F3C30CF15205294866F37D86C6DC2B9B2A175DF509036CE07E
D09C8CDDA7B1A6A233185EE452C64E49F92FE77ECE8C385147D8E3E57A077467
43B4BF9BA204EBEC4E0F385C6AD0D99974764811F7427EC24F1E62BCF301CDB0
8D8A91D2C8DA8874913402E504FF30F0D9048891A1AA93F140C6A16435598BC5
857EF2BDDC55F594F551E15B269E003C19C0346FB0B2BE60F494BF83CBD45A47
0B029E5A8D9CDBDE48E4A19859741D46BC23B232FAB3D7FAE66079E9CBD82246
49B65AB95C584507CA3D5934C9320714A616A5AE6965CAB852F68046A5512159
8E421656ECD9CFD9760F1AA7B336B5D5DE35CC4D345B67C3183D43118ED30D3D
90CCA683FA36D0094B163269F63145C63B3CCBEA4703B9E6F8A3B3EE448D9605
3C0B2272146557DCAA273D4A28BA5C75949675374C8CE270A45C0A016AD58843
C17CCBF59DB0B8835A91EBD528AD600AB4B2AE4BBC1D0E1D6749DCFB6E90B0B5
DD20B1B981C39529B0275AF422EB54A8DA539524D9DA9B1E268638E18597D4E1
BFE6C279466F212D8DDDB1B014980E2EBB9010E57FEA330075DD99251B10DF76
E1E939E92C87D119A806459D21FD1A07A262A8002B0BAB569AE20868C47B6108
ABEA625D8EEBC68779FF004D24B902CCFFF537673C1B48224627B776229BB134
8B8B7E9BBDC42B285EA2FB0C28AE0F0C93D08CA54651A3F1B7EF95D99D2648A7
2A42C94A5EAC317FCBC35E47630B6AD2F866046A0B3291EB53B5A363D3520E66
C9D32E729F652C8A1D6BA5BB3A616612EDB9CC3F397427E39710D69B23270997
6CBE5DB7BB5CA49C5A0FC4D4C19399F1349AC83E14E453108AFD41B58E7AFB4A
ADDEA9542AC037E382B54990353470F20E40AFD3E141E7AD5B5E4B234F692183
7A3145B907F4986298F2F45B9781F2DBA9A018C0F06B6DF2C372DC7522B19740
94E331540CC83CDB34E43E4605462981F3ADF5A8805561B2FC1CD40518C22910
4DD573F8F71933A1249F78E11A084626393B9511C87720A7B7BA6FAD1FE018CF
12134772CA3CE8F8251C1EC836A8D6BDB2FB61CC7D12DA8D10616FC3D50CB58B
62F724573DD7620D70CD60EB4363DAE366531FA14FD918D57D6E758A5BC5DB95
277D8B0F8B47817834D5584E93CC26C46591987769EC7B46F860F21F27315968
B5623788746E8828258E053ED37FBC0EB2A23307EB67DF96FC48FA6AD260636C
C073221C513402BDF0BB30A317174314D868209BDDAE8AE00E9CC2E1A0E0D178
58D0F9CFDE580C7D85B94325E0B7378619C36432209FCEE460BE24FBBDF8075D
E3A03674F4F427274F76F142C563E50E366F3C08A3EBDF22FEFA979B0ACFB023
BCBB59D2A77803AC50858E7BA06871A826CB615ACC96E47F363469BBE90D5CCE
770ABCC615F7C0D5C84FBE4AA360EA6E3FBFA5AE5333AD45C0BA18C46CA0BEC5
BD16A925BD7E65DB529CACE4863DC477CD41C8AC9D5B43AAD0E28D976F6C6A71
19DAD55EAF8654DF5B0AFD92D46E085D6B51FD3E4DD76C3103ADBF50E221B272
B5950EFE929E4A9E4EDD5C4C622110E9A5AA0427A808E4B90262C83AE47AC399
F6059CC987F90F132F8D62EF0CC5258ECA51C112C84DE1243AFB40445FB4F189
4CBFB8842016F9D34DFC97321DA3205E8F3838325A13EB2153EDEC6787F1E71A
DA7E63215B6BA61D2CC08A41C29A4CB23622E697A9D5D77FB6E6DC4A2469A3F3
02F2077E2C9E8C2A8C313ADBFD06C829C49A5A903A90C08B75BBC927E1AC489C
6D09EA559B9E8DD9B88B5120B6BAAC1C6D5CD0D5A4E5C40079F04B707794E5F5
1546F1EE704611617E77A7A85E3C00C9576844B2EA3FF7A9E2EA317EEACAEDCA
E620D1113BDE49F6D6CCD1D225B8D70F0EEC70040085CE6A03024AD4A6357ADB
D3DBEBA58DC4D1A1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Rpxsc
%!PS-AdobeFont-1.0: Rpxsc 1.0a
%%CreationDate: 03/26/2008 at 12:00 PM
%%VMusage: 1024 19243
20 dict begin
/FontInfo 16 dict dup begin
/version (1.0a) readonly def
/FullName (Rpxsc) readonly def
/FamilyName (Rpxsc) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 1.0a, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /Rpxsc def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 108 /l put
dup 109 /m put
dup 116 /t put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-37 -172 852 718}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACC3A81E20942BB04231EB87950D3E6DDDEAA
00BF34D234C3EED288EF48BAC1C5A82100D509B23DC66D6329169D3DD2484ACF
8371FB7885B3B0B5DD71772EE47D76AE2D201426E16D6D8B47D1457D53617311
5AF4F7AF00A80D4C5B3944C9C8F75EFE0B7C722CF70120F4BAA795F32F7A8757
3D6B109A9949772811BB01A8F23DB4C6C78049BF2FD854FB9992386130BE842A
696527F9F82FC671259AB26E90534CFDB3834A73924481C5163168287B106EE8
35876D0DB38FA090E9DBA71AB10A9518BC3A6033EC6B9FB4BD12005756B38A7E
F25E73F72FC2A8F9CE4516CDC75D62471D8181784B0416B5BEEB6EE2E2CB6EB4
A88E81B86C655A7E3CF176DA7CCBCF326AD2F36FD2EB624A3EF7B4C30E174B5C
9C98E4F572642BD80270AD030FD6F7EFFAF597F2ACDDDC8BCB35EFE7B1CB0256
13E5378C4FCA79335DCDCEA285008AF171A3015C2BDBE0299E0CA3064CB1867C
8B7AAE570571179B506A1E66F9AFC7542B9A95275E6ECF1ED1141F6ADF6F76B2
FB81B57175DC9710B55C562071606EB948C40034E366794EAF271C6D709209D8
E5A715FA50174CDD3A0C38C52CE8520B6A1E762E6246A81700E8E78065AF9407
2BBD3163235328B74EDCF744F308D336A4ECD6F149525E4DDE92EB6573D4D49B
FCD78D178B1C7E82105CEC12CBEC30D4089068EEE261B006740A4E092DE4D11B
579E6110A015833D37A81D490128859ADEFD13F96A1C2335155A7DCAD4D784ED
927643F67EFC25B3D8E9A26518276739D13402D190F60E167ADEF2484B571390
509B41BC3C1910BE3B8FBD1B09F364B137C05C42A2AF30EE05D1BEFD8A395188
B7CDA6A4DC020EED70A79FC4B0D560A451C53CE1F47A162B7AD07DD34DB43E89
4D1E45531A072D42AB44D9BC4879C355A865875AE08F36FBF5E38D8CC8D9F4C3
B5F906B040CDA86876ED0C5EF09057E01551B78D66902B81577CB9AFD0C33616
C7D486B944A93817A1147D7187CE5EAFBDA689F1DFF1FBA8E46E8D9531D28AF4
2EADE38AC9468077E397203FC71BEF207FE99070BFD5F48589220879AE790DD1
17A0A24666D3C1081E70DFD92EC921DB226B32E3A3A95F858AA9862C3C13370D
8978539FA699CAAE9C9F8FFB3920C755945E916BD424D9CE8A1A6E13C9E04267
EB83F64B4A44F5FB318D300601AB79164DFA49DD5034EFF9649AD784EF77B6C6
DC6FC4EB76EA4FF0A6BC602321F8A2EC07A4C7258832FB5481CAE499E511FF84
18BD93AA9C2A0A1B887B37FB61FFB16E63EC6D0364C3908152CAC0D4DEA88635
620B8C476B218D1FA5F067E383499E349DF3B3EA3EA186F0EDBB8EB94F2398C3
0BB4DF9D2973B27CF7AECE749EE655C291E5402F36A81DA64411C9FA66302EEC
0CB3D79A13D5A3B665C873686E95CA5562FC491F9BEC6350EF50177CBF93D1C4
0A052397A37BBBF90A79CA356EBF566BDFA797CEB9EDB9395B4372F89D3D79FF
7CBAFDF7BBCFC3FE63FCA6BFBDE4ED7BE487B946CBC626578E7813BA8E54EFA7
EDCA380054B38AB43CAA109C6455275196654E51CB6CFCEB611BBF7783D579DA
9848014D63844F2678FCB560DFA05EC56262CDA52EE30A3C75700351E999F8A1
64EDA3219554D68A3C28EC8773CAAEB676E2C92565999A191632A6E891733227
135403D9106570E2346B4C1757487A5E929E0AC781C2F93A69E8C4F4CC2582AA
9FAFAB0E4670482976954951B438CF303BF2E04395002B6F781AC79D33093A40
6B84FF26A98F88C7E2FC12971B7E274A196F35E773F29CC8B40F75E55A1A49DB
37EC8896DF63C716ACE5B8F2A3983719F32E558CF191D033437862D86C09151F
58128AC733AF385312F3588FE61DE80D8BBA0230D9B274F709C0C435BD016B84
F77635825558397C502B48EBCE6A9B1B36A6AF9D6922F88E530F684B7F14AC8F
165BD3AA9F91B99349F5421588B3E432DE69A2C0AF0D94CBA596C2200622A13B
A83298B05C3C2F8A314F0DB4F83C45DAD2E3FBCDA16957A7B3FF0DE2B0E8BA48
FC512E33C005574FA93BE781DD73BC02EB915755CBAA9C0F4A38B95406D73A39
77DFFF0DB24D4645E881D7A60773EE69C2FF928E7069603B1D9C810A9090E659
7C59CFFE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Rpxr
%!PS-AdobeFont-1.0: Rpxr 1.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 13136
20 dict begin
/FontInfo 16 dict dup begin
/version (1.0) readonly def
/FullName (Rpxr) readonly def
/FamilyName (Rpxr) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 1.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /Rpxr def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 43 /plus put
dup 61 /equal put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-40 -283 904 728}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACC3A819F74D19694FEF234D46B09D261A206
5701088EA26D9FBD7C085BC1BE69A98068A62C38375BEEB488ED9AAABE84885E
92C1CA8A2A04C7636B2416F5656B25F234780C40924DA825DBEF32B5BEEABA3B
F239D8F0580B97C841973AE184074B483616AF2BD12551EEFBE3C71EB84AAD4F
0684043448F1A3C094DE1897A3C1F22D85E73BF47DC7107BA796C3F8ED1C71E1
7F470737A845B35B4C527A202D8309152E26FEBB373F20D8E81DB0709326CC90
FB7D28D820213C8AD2BD9B25F1DA5FDF011B3B1CB4FA02810F49B83F02D96195
6AABAB1966F79818403382D7618012C6FD26A655682E1046CFB2F45B1C83C79E
4C7D7C08F6F41BACFE8456C426E5E505D03610A253E07C3EEDD0C4ADFA832413
AF6301F076EFA584A1941AA48F7EB883D9837FB23BEB03806099410EDDCB91CD
D1A857949EE495C99097D72C225921E5284C9E0D06A6FB148FB9967327643D01
5A442350EA4C45B7EB48503FC039FEB875DBFE36A4E475B8D83F6BACADCB8FE5
E2CBD16F8122A624D8D2051181315AEF884EABB76C5B134E7E2B8AFE48C121DE
E687B3FDCCAAB661B15DD73EB0125052106FBBAF3FC9A0CAF993C4CB6089865B
3ED741CAF41706122EEBB2EE0FD69336E7AE0E7F9DC705B8977CFA1D7EEA3D0B
34261296005C1E9229741EE95990B80532566077FD7F0638271CB6C64A9B95D3
122A16A9972A99BA35F0DE2C62D513739F4FD7A4FF5B40026A6CE11F2A14BD31
5857794D53285F42800BF75800E7B21A438FA801E99C284DA832321C39C41360
22F9B603194BE0AE25995CC57001604787FB24FA09487C4307AB3B536E8EA017
E50F8716BD0A5D64B973F8D507C4E54B976728B3D14C9819C05F5D6954D59B26
32950AE63761C7CC6FB93A56D8CDA447F7ACFB30C6D291F35ABE7DF9FBAA3ADE
537081E32A42605133DC513654C4BC74E7D002A59372CF77C2777C872CF051F8
6602B3D72B66F5001D3F7B3B59B5554E3A1C3D6F3DB9609A3CC30921313DD7E0
2D6A7EFB439D8F40AD7D5BBD1ACFBA91FA58E49F57F01D6AFCD0E65CFD452D46
218B0AB8808A98613079ABF0872ED18060E531DDAB42BC9B5F2B3998B07CCF3E
ED439491AAC85E2BE2AF68684DCF2494FBCD06B1E5E2B32279C16898ACA272BB
FACA6C726E69DDFBED2FBA23D10B57F928680CE35FF171F372A0EBAA20D41D1D
9C06BF7EEB938776AC7277DBF3B9988E97B11EB6A6CD5C9CFFE4D943F7039A10
9EE65659151289C42E0953A979013A4ACD29F9EB8DDA97333BEAACB1C2B92F3B
73CD3DB6C15B2DABFE6E27BAD4F93DC65631E30C3B6F6AFBBE50F9FAA0511553
097235B72ED14AD03A6E2A777EE7B1D21241D90244E2EB0ACA2E36F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Rpxmi
%!PS-AdobeFont-1.0: Rpxmi 1.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 19695
20 dict begin
/FontInfo 16 dict dup begin
/version (1.0) readonly def
/FullName (Rpxmi) readonly def
/FamilyName (Rpxmi) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 1.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /Rpxmi def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 12 /beta put
dup 13 /gamma put
dup 14 /delta put
dup 15 /epsilon1 put
dup 18 /theta put
dup 21 /lambda put
dup 24 /xi put
dup 25 /pi put
dup 27 /sigma put
dup 28 /tau put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-70 -289 949 802}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACE97D3503A90922E832D2F729BC5069A76E6
9289E161FCC08B299D76D9DE0A964E6F455992BEAC28494D8CBC7EE5955B6EEC
80EEC572D95FD38C98C674E47FE8BB784BC35B6983CD2C21B8A5F08E3143BC4D
86B0DCC03103B1A61017566FBD0670F20EB876A5788DF9BC3B14BD2C4A37C3A1
49FD43686186F4F657FA46340C369C69140647F5020F9AC566052BD14873F562
C6D8A81600F89BAFDDE9C4344172C143EB9475A950467FB3085C89B22492CCFE
57C3EE3644467DE6135795AFA5AB534D63147D80CF36DEAC9F07BCE5A335E060
1AAA0F4B0B96B2D6ACFA1B4AD4AC5B7E156223648B6CB16C3026573207A549CA
2DDEABE477E9ACB7B77CF02571E17D4987444DE903420C70993C9A0FCAFA10A2
67770EC8A73505C1DDB14B229B8E3785E11F77B5531E4ACC7C4BDF7756E2525A
D8B5690C5BCA6D173CEAE04E14CABEF25A6BB0A93740C8CC072B11B3BC72EC59
A516F15F22941A137A39F189E20C373A057CD515913A05DECD9D47E4669BA5DE
CA89EE643C1617A0D951FCA4C3B06FDEAF2A75E2CFC5F6D3D16AB9CB4629CBCF
B3AC302F6907E9558CC136E3AE3E8FDDA0B75422217B973F38D2B0AF82C46669
96A705C5347AD8CB2C66A62E8BF727495D38BC8D05DABAFBCD9ECC55539C9FBF
C635DFDA04EFC19A0477E9B3FA3E7450ED1F62BCE1623DD2B15BAEB4AB2F54B9
88E83BB67577906239DADFB1D392EC169AA9363FB63611D9A6A3B130A75C6207
6B4C8889B68FA5254F425BCB19F803A5FCC4AB16B285C44812BE29AC778A71D5
CF4F52924D8812E080BF119A24CD195FEBB2AD7137002BC863F61B3DD7433D65
6DE8540C9669565F32F19017D0BD5FC9C64EADCE71315A90141467A71207D4DA
E963B6E83FAA884F5EA707A7522A3014C8028FCF6066BB483A75F1C501146ECC
DC4D9CD5C9E3B30AF324B43A03C0EFB3A5B55D732A381657F01E7D025F6949CA
068E2592C4221DC8DF81DA13D5ECF22267B6FF43A52A6CB521BD93EE7136418D
F36478B12EE8B29C0A36FDF98D5BC7EA6D2913325010A8711C13956E9D93FE04
EC1F9D4CBFB06D63F0E070C35D89D8B435EE5C34C09662B15FB3AA31DC0BF0C9
90FE666E9C5B4EB6116645A2B02F07899A6C57075BC6406DB44F9D99059F0045
8C45FEE3C8024DB1014BD3CD03FF96CD89CC0D4263181FC38DAC51734B3CA25E
A45AAD70FDE7D6DF50154FCDADBD900567545339156F47C00F147A90D7295AFC
77AA4DAD65AA0A988E8462D98710F661BCE74330CECAF4999E49CFB5386DFB41
CE67DE45D762DD8BD4A627FC4A44B0FCA0057731AA7F20F66A2A954D62E2CE52
101D0B94A2D2408C23D065AA8F73F9B4CD270533C68C6ABDF1CA6EE4D39FFC4C
BA2CE696AC4DD10E316B764A06B93B7A6A2BF0FAB200E70BC68E26639FE0ED9E
7039DD92D7D2D0BD184D713C8E4D845568552FF228F6AD00FF7270C4E8B14706
38FEA782E9A317153E57465ADE74FD054244A22165C74EB310EB75A5A5D3924F
E8319FE61F75670CFDA12FA40A48FC609D49C6B8DA64879B1B9803193544870F
7C68D50BC4EBC6226E49528BB4675AA8CBEE5D4E73FD510E376CC18CA85E6A22
56918C34D69CE071C3737E44B971287AF9BDE01D3B93ABA57D86D46B322CDCE5
C1EC20B4C5A080F7EC33FFE8E7CC9B6CB60A09C0A2EBFE99FD75A900AEA33119
5E8EC3EF157C732402AD484B0A50309E46E66E2B062282F13209298E3A132151
A3A0440438EBD9E4CBB1AD0D62D5B4E0629E6733968FA935178709ACE747A166
2291684DFDAED3BA319EAE01DE93AF895766BE972BEBB672905E7A4222EDBDF9
A185C2AAA62623C58BF7FD18ECBD112C18F2D5A1F41FE46A50024C0F5561B927
A0C6AD3003958FECC561BC1CDDEF888DA250EF260B742E7B08513CF474580D2B
1467434FB1043ADD895E85932BE31F3818D6FB8EC10E790851D444F06348BF53
560F87ABDD71D371B19A162D707FFF95653B5C88A01171C9172406D0ADE6ED05
8F2AE84F226220DF1AB1AEDBFF46403FC9B186249B8D9C00A81673CE1E768351
42310F6573F29EEE75964B8C9F428A179591A672505924C86CDA00D28F580908
8518C7A49B83686FC812A196C598C1DCB22EEFC577D7F07FEA357DDF54FCEA30
A12A58A6A8BCB516F9D462EAC3DC6E913E9EF6E18C0D2F0F9997E739A043084B
B8E5946EDFD91895802347189EE81DB8D976BEBCE557F3C3BA187C1847519B91
7E4A016C5B0D7711D919F2E2435CFA65E82EF2FB327E99AD2B8BF4E624FF036F
D47C50EDE745912774875E7A7057C88E7BB7F4AFE24E9451363B85BB93F8431A
527B75FAED46BC4C2E0D3786A7B15F17B2E6EC7F3B0D5AF339CBEDBBF9DF472E
A46C28DDF52833598CA95D37F4C938E9E0B83196106B92121B15E5FB99A2760D
1C5D66B9E20C0450F3A95C3BF4596A9E86955394A2E48A15B8898BF81D780F35
3AB3DB84C10BAC136821C388A4B994862AA9D645D33B1C5342981E88DAC74621
8136C2A4046E1273D6E63FD2B2171763BAE3CCD8A53F4AB39B2DA726EB2B335A
A79CA0404BDB122133A4B29C2E85B9B43C78CC8D5E03A6493FA37C3327A381E9
E9FF678C3DD888C52BE41BE10973A95B315C227C3E4AB78097A87E43D255A14F
86EE5D10D483F33D39250933236E10A18CDB8BD11CE9BD6F631E703FEEAB4B3A
4BF5385AB6F61D590B6BC5DCDE76398A24FDE8E5CFF66551BC54936B6FC21CDD
02E18E9649CEF0A366E36601D4B75375E383A5903713A5A2656529C9F1B7F078
96A483360B0DB276811D8E46A864D8C10A03894676C85483BB6ABAB0726A8B05
ED27B838494738ECFF34F0C41D71295AF91BD89CEB9189370D4A7D45A7387157
3C8918858FF3D265F66653961A2C85F118AC15EE90024641D4A89214CC277D86
605C1945EC89F7100A68FE01E3C12F427E26BF7768F37531B9E1801EE2FE4050
61741019B9D0D7DD46D943D01749109965B87338F6D86A8910171382DCCF7C83
ACD62213BFDE7A0FE4C945D75D7D888F467B6048FA02DDD81870917A2DED0FBB
790C937909DF561DDF4C0B2CC250886E4799847F7CB8A206A4D5AF53E18017CA
8CD4BB8E40264DEB9FD266C119BC662ADEBDC6E8E5AFAFDB85730D40CEF5A0AF
DA142EA1FC97543D7F95CBDAA07C037411A9FC577B0F6054C644F498E241BEE3
E9A3A8A7EBEED8DA5EA2F650ADE86CF4EC56595DDDB3FF4AD505AB93E62FCF04
E6EAE694763D8E4358D0B03F77EFA235F049234FDC26FF90EDDC46C16A0BF565
F9EF418FEE5CC4220F3EAC704BA6EEA606D472CCE4CA13CE7C0E179EFDF591BA
5A3FEC2A4A1B06C9C89696490CDB5A1D53DD5898F807C82588612836DF09DAF9
108C7F3EAF8CFEF5EC8631586BF8621548FE81E778DB3E98BA85C1B164BFCF6A
23EFDDCE9D235521F5B0A6ADA0E40B2E188EBC8B9F431CD83EEA8085E3F49B1E
88AF6C4A106661CE7AB2D9B4521C8CE005D774C3F4C1DCB19C41FE7A9165638B
4D4D32F2F7C0021482546926071B8DE2D4F5371DDFFF417AD730BEF4301D21CA
66293E07A4A636502F0927DAA40B9161938210698EBA835023A071BA381C3B27
10D5E01AF44DE8165C435955E8203FF8C61A9EDBE0DB05E894C5BB9543A2F728
B1A25EF62125527385
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Pxex
%!PS-AdobeFont-1.0: Pxex 1.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 22946
20 dict begin
/FontInfo 16 dict dup begin
/version (1.0) readonly def
/FullName (Pxex) readonly def
/FamilyName (Pxex) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 1.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /Pxex def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
dup 34 /bracketleftBigg put
dup 35 /bracketrightBigg put
dup 40 /braceleftBigg put
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 66 /parenleftex put
dup 67 /parenrightex put
dup 88 /summationdisplay put
dup 90 /integraldisplay put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-5 -3116 1694 792}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363E0A2266560A8C0E624B948EAA0C4AB137E981
75C7C7BB0AC94C8FDC2A3354A4BE3B793B21300079674ED854E37A681034943D
8673175A23AEF82CE54B7EC400156D607D4D4AFAC01FF01A16C163461E02D956
8843ADB60C329157C708D4F9A1350EAA28968C3770765342E430C98FF871A502
FF962309E4A7609AB4D7B1E828ED425E48C5C6064FEDA2CBEB1DA04B520A1B1F
E4A665007D8D2E6A859278C76734F4A4EB92AE68DDD6C9257B9E6885DAD02D63
2DF2043D326FA185F15773545EBB8C5F466A16259D92CDE9DCEA03F1228F3679
EBBA7A708E9A7CF153A7C7B6CDD221F8669C6884F80B2634FBD031C430A859E7
343910D9FBB4225C1B2A88D33A95C48BFA791BE7EBF01B060D77D03479954D32
E2BF7FE56CF650BE7E15CC173797C24CC83176CE29CA8137F725A61174D35E92
8AA083F8817E64481B4479C7386CF4B205301FE5A2F54624315981DBB4AD5867
534533B2E9E6B6A41AF43C9125B80DD0F90CD3709FFD8C63D07E39B62EDB5E0A
A72CB28FE9D7014E44640B8E12E57BA345830B8302B43841B8D938169C83264B
2A83EE32F7CAD78C3FA612B4DDAF9B4F85050914626521A9503CD1C71F5AA255
F20ADC571B23B0496016D6A4026334AAFF1BE1C3EB6432D5776AEC6F836D7FCF
8BAE2BEDDDE65EDD34AE5A5801B7F6F0E523C9892ABAA08F3A3AB74A4A49DCB1
B096C8825EAC50B68B5BFE2CCF09ACCDAE42C67ED327AA26C367A8179A926A41
10344A7F9C47B8F383C352CDD6B04AC8719E952A752EC3FF719A515B271EDC1A
133E2D54C50FDE6014CB8D42C1CA0E39639B7B440150702826C0166B4F8C590B
3BB5DD26B2B49130BB575883BD5EA4DEBE6403E55E81303AD2888C908658ACB3
65DFF030B7A0BBDF38879BD546F1933312A31543086507FE01999AA733F36ADD
6CE115FFB0516D2CA4C9A99454BB36F52E4E351B543549B6608B7F34FB098123
C39F65E49E2AE089A850B304A21B9B04DEF565E0E11A5500274E648FA0144CE5
228CEB76522DF89E9ED6AF96D0482FE0648560C2DD145E79B7F195CE9A836EFF
BC0216D299FA549A7854C4FAF9960A956BD76B4E8938623E9DD7D240A9E389D3
FF95328586739D63D2582E03AAF458F090DD686E235A0ACED7663DE88FCBB801
F28F3D878DF27BAC65027C41182CD98598C981B3E5462DD0151D8868BC1EB599
3CD4F36991875BEC11CC0B3A393FA1DC6EDB95CFBE464712FDE57DAC8E66B9D9
0D5CD687928E190B98C1AC61C825F64F45D7D726D56706A8B65390A5B838FF9C
114D75E7B82125D8A32B2AE60FBDD2DE3FCDDB476137FEEDDE55F0C9ED57063B
F051F270ADF871CE7950533296FC93E4420A84CE259B36B732AC7142BBF571A1
36D412CE1290AF3472F9A4D1DC8213ABCA4502A46FA663A47CDA2A403CD49337
4A6F1928BBC222B865AE7C1BF1EEF0C1504D991E91111A4DE5B5D519D03493C2
036BC320883EE0543CFFE4826F432D1F2D322B57033F4B99E1AAB6071CE6F3D4
01AC4579E594DDE2FFEEA9BAE0F4C2E3EB0F9F77BE5EE71AAFC253F24993E269
C0295063C9A79A9196D5F884614EC0D64BD673D294CD137677B3F778154D6901
62E5CC31008640E6A92BE3245A81EA379C1604DFD32F43800F1998F4F66C7DC2
1C22597CA9977B355FA59DC3B0BB0227F318A33DF71CDB37608D2A6854252F65
E0ED9EA4BAA5E9E3E9FD11DC3CE8F1A864ED85C39FEF6EE24F227C5C3A2A0D64
15F496913547DF650E789B901E6F807C1D943DCB2A2DBDBCE57EFF8EA883847C
6664EEF1CEC0F60AA76E3D456020088455A3F7817EEA81C5C4278E25C3327B5A
02106F122BD5A8597C9953A2112BF494156BE0985C3A390F3988D86C0BFE3521
BEF0860018D1BC5D9306875B7F6EE6630A07055205D2CD70010CE3074E86D7D3
AA2E4F32B444E2B54F07B65A30197598B2F5AB1E60D153D1BB6F53508085B65A
5F6E69D5D54203AC9A7FF8BDAA1CCD8F36F5C0336935441513AE39FD1A81E0C9
76895604E102C2C56AA0A1132E79E8DBB4D57781D005209FB3E1C0B29C3F3DC2
160BC3AB2324D26BFF5B31366462D5707666E2E59B9A77A4D1E8F2E0878F915C
F508B9C12396422BA5FCC3991A405FF912587615FEF73D01F4B2F093EFE88C1C
F910DBFC4245AD9314F741264E678456A35F4C560BD1227EA9A9B55CFB489454
CA85DFA51F47A760E47A2AFD1946BA50BA9432E3F52EBDBD7A03EC2FF63E0144
BFC1A97F8480633473C3710040D140882082A0C606C4C6549980BB61C7AC59C5
9A83A563EBE8927F1720DF11B6CEE71F959ED902AD9A5CF35C0A10C568C40A19
C4CED19C4A7C54C95764E0BA24D1AD45C114D61E00D1628656E81DE35FBBD037
C42C203E1ECD57CEBBD196EAEE1EE6FA478521DF2AB908A4F14A4ABDD78C12D3
39038F7C7785B1B24E8D438518FDC4A1B3A4C9233D40259FDD22946C4E49004F
B93735F8869D3CA4E3C01687A658F55878576397ED2EA829E1E76D559B826A6F
D4A69F373CAC16EAF53E587838888C45E482D7807C14B1855F92428BFF6C5783
6AE9454E1DB247172D0CA971DF6226AA225AB335966F1D38C00719DE727C215E
B1584A09526724A82FC7EBE7C00C9FD232E93BA791C6241754A5B2E07A40CEE2
C46D6591146F656900A24CB8A146831B2FA01EC537161A3D2B6F3A270AD93E4F
0B869A7AC206B8206D97E4C59DD6E88AB78BEDFF90B9892C04AD2E09C00F1E0F
B37051E9C8F8257DE372BDF3FF30B9803BD635CFC2BB242C29A76884CB72C8F4
B44768EEDA6C28C3A8F8B60B1475016F15F4F21F28C69210904375E4A111056E
635F6845CFB7B458BDF6D6D72F6C170F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (mrwE7.dvi)
@start /Fa 207[15 48[{}1 41.511 /Pxsy rf /Fb 137[46 13[51
26[83 6[46 70[{TeXBase1Encoding ReEncodeFont}4 83.022
/Palatino-Bold rf /Fc 133[44 4[44 1[44 44 1[44 44 1[44
6[44 44 1[44 44 42[44 1[44 6[44 46[{}14 83.022 /txtt
rf /Fd 139[39 6[61 39 9[39 47 97[{}5 83.022 /Rpxsc rf
/Fe 143[61 62[75 15[84 11[56 56 18[21 56{}7 83.022 /Pxsy
rf /Ff 206[52 21 47[39{}3 58.1154 /Pxsy rf /Fg 194[39
17[39 43[{}2 58.1154 /Rpxr rf /Fh 182[20 3[36 1[41 16[29
29 29 48[{TeXBase1Encoding ReEncodeFont}6 58.1154 /Palatino-Roman
rf /Fi 133[26 2[42 1[32 1[23 5[45 5[29 5[26 16[36 1[45
10[39 67[{TeXBase1Encoding ReEncodeFont}10 58.1154 /Palatino-Italic
rf /Fj 194[27 1[15 33[38 25[{}3 58.1154 /Rpxmi rf /Fk
165[56 1[116 20[35 35 35 35 14[35 35 7[49 4[32 32 33
33 32[{}13 83.022 /Pxex rf /Fl 194[39 56 21 21 29[43
46 1[54 45 2[51 2[51 2[39 41 48 43 49 11[{}15 83.022
/Rpxmi rf /Fm 194[56 17[56 31[50 11[{}3 83.022 /Rpxr
rf /Fn 107[42 42 24[42 46 43 69 47 50 27 35 33 46 50
45 48 73 24 46 1[24 48 46 28 40 51 37 46 42 3[28 1[28
1[55 1[83 1[65 51 44 55 1[50 1[69 1[51 1[28 28 69 1[46
51 64 59 51 65 1[37 3[21 2[42 42 42 42 42 42 42 42 42
1[21 28 21 2[28 28 37[50 2[{TeXBase1Encoding ReEncodeFont}64
83.022 /Palatino-Roman rf /Fo 139[33 1[39 1[61 7[61 2[50
3[50 29[72 11[50 55[{TeXBase1Encoding ReEncodeFont}8
99.6264 /Palatino-Bold rf /Fp 135[60 4[53 47 8[40 3[60
1[53 29[73 69[{TeXBase1Encoding ReEncodeFont}7 119.552
/Palatino-Bold rf /Fq 133[37 1[42 60 42 1[28 32 32 38
3[65 4[42 42 23 1[42 34 1[37 16[51 1[65 78 3[28 2[46
2[55 1[60 12[42 42 42 42 49[{TeXBase1Encoding ReEncodeFont}26
83.022 /Palatino-Italic rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 21 1
TeXDict begin 21 0 bop 3215 70 a Fq(21)p 600 103 2699
4 v 600 333 a Fp(Exercises)600 605 y Fo(Chapter)24 b(7)704
796 y Fn(1.)41 b(a\))21 b(Consider)i(network)g(activities)f
Fq(v)p Fn(\()p Fl(\022)p Fn(\))f(that)i(ar)o(e)e(steady-state)g
(solutions)j(of)808 895 y(equation)d(7.36,)e(satisfying)1028
1145 y Fq(v)p Fn(\()p Fl(\022)p Fn(\))j Fm(=)1277 1021
y Fk(")1309 1145 y Fq(h)p Fn(\()p Fl(\022)p Fn(\))17
b Fm(+)1549 1026 y Fk(Z)1644 1048 y Fj(\031=)p Fh(2)1605
1221 y Ff(\000)p Fj(\031=)p Fh(2)1739 1088 y Fq(d)p Fl(\022)1832
1058 y Ff(0)p 1739 1125 118 5 v 1770 1202 a Fl(\031)1894
1144 y Fn(\()1922 1145 y Fe(\000)p Fl(\025)2029 1157
y Fh(0)2080 1145 y Fm(+)h Fl(\025)2205 1157 y Fh(1)2253
1145 y Fn(cos\(2\()p Fl(\022)f Fe(\000)h Fl(\022)2661
1110 y Ff(0)2687 1145 y Fn(\)\))2743 1144 y(\))2783 1145
y Fq(v)p Fn(\()p Fl(\022)2904 1110 y Ff(0)2929 1145 y
Fn(\))2957 1021 y Fk(#)2988 1234 y Fg(+)3059 1145 y Fl(;)123
b Fn(\(1\))808 1383 y(in)24 b(r)o(esponse)f(to)h(input)g
Fq(h)p Fn(\()p Fl(\022)p Fn(\))i Fm(=)h Fq(Ac)p Fn(\(1)19
b Fe(\000)h Fl(\017)f Fm(+)h Fl(\017)14 b Fn(cos\(2)p
Fl(\022)p Fn(\)\))22 b(as)h(in)i(equation)f(7.37.)808
1483 y(Assuming)i(that)g Fq(v)p Fn(\()p Fl(\022)p Fn(\))e(is)i
(symmetric)h(about)e Fl(\022)30 b Fm(=)f Fn(0,)d(show)h(that)f
Fq(v)p Fn(\()p Fl(\022)p Fn(\))e(takes)808 1583 y(either)c(the)h(form)
1514 1762 y Fq(v)p Fn(\()p Fl(\022)p Fn(\))h Fm(=)h Fl(\013)14
b Fn([cos\(2)p Fl(\022)p Fn(\))j Fe(\000)h Fn(cos)q(\(2)p
Fl(\022)2451 1774 y Fh(C)2495 1762 y Fn(\)])2550 1783
y Fg(+)3203 1762 y Fn(\(2\))808 1967 y(or)i(the)h(form)1514
2171 y Fq(v)p Fn(\()p Fl(\022)p Fn(\))h Fm(=)h Fl(\013)14
b Fn(cos\(2)p Fl(\022)p Fn(\))k Fm(+)f Fq(v)2226 2183
y Fh(0)2273 2171 y Fl(:)909 b Fn(\(3\))808 2351 y(In)15
b(the)h(case)f(of)g(equation)i(2,)e(which)i(applies)e(when)h
Fl(\022)2499 2363 y Fh(C)2567 2351 y Fl(<)23 b(\031=)p
Fn(2)15 b(and)g(for)g(which)808 2450 y Fl(\022)859 2462
y Fh(C)928 2450 y Fn(de\002nes)24 b(the)g(width)h(of)f(the)g
(orientation)h(tuning)g(curve,)f(by)g(calculating)808
2550 y(the)c(integral)1354 2680 y Fk(Z)1449 2703 y Fj(\031=)p
Fh(2)1410 2876 y Ff(\000)p Fj(\031=)p Fh(2)1571 2743
y Fq(d)p Fl(\022)1664 2713 y Ff(0)p 1571 2779 V 1602
2856 a Fl(\031)1698 2799 y Fn(\()p Fe(\000)p Fl(\025)1833
2811 y Fh(0)1885 2799 y Fm(+)e Fl(\025)2010 2811 y Fh(1)2057
2799 y Fn(cos\(2\()p Fl(\022)g Fe(\000)g Fl(\022)2466
2765 y Ff(0)2491 2799 y Fn(\)\))p Fq(v)p Fn(\()p Fl(\022)2668
2765 y Ff(0)2692 2799 y Fn(\))c Fl(;)808 3034 y Fn(show)21
b(that)g Fl(\013)g Fn(and)g Fl(\022)1474 3046 y Fh(C)1540
3034 y Fn(must)g(satisfy)g(the)g(consistency)h(conditions)1497
3261 y Fl(\013)h Fm(=)2074 3204 y Fq(Ac)p Fl(\017)p 1658
3241 964 5 v 1658 3318 a Fn(1)18 b Fe(\000)g Fl(\025)1843
3330 y Fh(1)1890 3317 y Fn(\()1918 3318 y Fl(\022)1969
3330 y Fh(C)2033 3318 y Fe(\000)g Fn(sin\(4)p Fl(\022)2335
3330 y Fh(C)2380 3318 y Fn(\))p Fl(=)p Fn(4)2489 3317
y(\))2529 3318 y Fl(=\031)1236 3525 y Fn(cos\(2)p Fl(\022)1474
3537 y Fh(C)1519 3525 y Fn(\))k Fm(=)1658 3469 y Fl(\025)1709
3481 y Fh(0)p 1658 3505 85 5 v 1673 3582 a Fl(\031)1753
3525 y Fn(\(sin\(2)p Fl(\022)2009 3537 y Fi(C)2051 3525
y Fn(\))c Fe(\000)g Fn(2)p Fl(\022)2264 3537 y Fh(C)2323
3525 y Fn(cos\(2)p Fl(\022)2561 3537 y Fh(C)2606 3525
y Fn(\)\))p Fe(\000)485 b Fn(\(4\))1676 3687 y(\(1)18
b Fe(\000)g Fl(\017)p Fn(\))p 1676 3725 228 5 v 1771
3802 a Fl(\017)1928 3621 y Fk( )1961 3745 y Fn(1)g Fe(\000)2105
3688 y Fl(\025)2156 3700 y Fh(1)p 2105 3725 85 5 v 2120
3802 a Fl(\031)2214 3621 y Fk( )2247 3745 y Fl(\022)2298
3757 y Fh(C)2362 3745 y Fe(\000)2446 3687 y Fn(sin\(4)p
Fl(\022)2674 3699 y Fh(C)2719 3687 y Fn(\))p 2446 3725
301 5 v 2575 3802 a(4)2757 3621 y Fk(!!)2851 3745 y Fl(:)808
4009 y Fn(b\))i(In)h(the)g(case)f(of)h(equation)g(3,)f(calculate)g
Fl(\013)h Fn(and)f Fq(v)2445 4021 y Fh(0)2478 4009 y
Fn(.)808 4141 y(c\))34 b(For)g(values)g Fl(\025)1388
4153 y Fh(0)1464 4141 y Fm(=)42 b Fn(7)p Fl(:)p Fn(3,)36
b Fl(\025)1775 4153 y Fh(1)1851 4141 y Fm(=)42 b Fn(11,)36
b Fq(c)42 b Fm(=)g Fn(1,)37 b(and)d Fq(A)42 b Fm(=)g
Fn(40)33 b(Hz,)k(use)e(the)808 4240 y Fd(ma)-5 b(tlab)1063
4274 y @beginspecial 153 @llx 149 @lly 161 @urx 157 @ury
80 @rwi @setspecial
%%BeginDocument: tmR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 149 161 157 
%%Title: tmR.eps
%%Creator: Canvas 
%%CreationDate: Monday, July 16, 2001
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: Palatino-Roman
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def/mo{dup dhOdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
mark /___FN3 /Palatino-Roman dup 1 rf
F debug
0 id
1 fd
0 306 translate
1 -1 scale
%%EndSetup
/DeviceRGB scs
0. fg
0.125 0.125 sp
1 lc
50. lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:2 Text
0. fg
stm
7. fts
/___FN3 cvsf
0. fg
F sa
155. 154.7399 mt
(\250) show
T sa
rtm
%%DSIEndObject
terminate
showpage

%%EndDocument
 @endspecial 1154 4240 a Fn(function)38 b Fc(fzero)c
Fn(to)j(\002nd)f(the)h(value)f(of)g Fl(\022)2598 4252
y Fh(C)2680 4240 y Fn(that)g(satis\002es)h(the)808 4340
y(consistency)13 b(condition)g(in)g(equation)g(4)g(as)g(a)g(function)g
(of)g Fl(\017)g Fn(for)g(0)24 b Fl(<)f(\017)f Fe(\024)h
Fn(1.)j(For)808 4440 y Fl(\017)c Fm(=)h Fn(0)p Fl(:)p
Fn(1)13 b(and)g Fq(c)23 b Fm(=)g Fn(0)p Fl(:)p Fn(1)p
Fl(;)14 b Fn(0)p Fl(:)p Fn(2)p Fl(;)g Fn(0)p Fl(:)p Fn(4,)d(and)i(0)p
Fl(:)p Fn(8,)h(solve)h(for)e Fl(\013)p Fn(,)j(and)e(ther)o(eby)f(r)o
(epr)o(oduce)808 4539 y(\002gur)o(e)20 b(7.10B.)28 b(Repeat)21
b(the)g(plots)h(for)f Fl(\025)2085 4551 y Fh(1)2142 4539
y Fm(=)i Fn(0.)30 b(At)21 b(what)g(value)g(of)g Fl(\017)f
Fn(does)i Fl(\022)3255 4551 y Fh(C)808 4639 y Fn(fall)j(below)i
Fl(\031=)p Fn(2.)45 b(This)27 b(corr)o(esponds)f(to)h(a)f(model)g(in)h
(which)h(feedforwar)o(d)808 4739 y(orientation)k(tuning)g(is)g
(sharpened)e(only)j(by)e(inhibition.)62 b([Corr)o(ected)30
b(by)808 4838 y(Sune)20 b(Jespersen])808 4970 y(d\))j(Numerically)h
(integrate)g(equation)g(7.36)f(for)g(the)i(sets)f(of)g(parameters)f(in)
808 5070 y(\(c\))j(to)h(con\002rm)h(your)g(r)o(esults.)47
b(Use)27 b(100)e(neur)o(ons)j(with)f(pr)o(eferr)o(ed)d(values)808
5170 y(evenly)c(spaced)g(between)h Fe(\000)p Fl(\031=)p
Fn(2)e(and)i Fl(\031=)p Fn(2.)p eop end
%%Page: 22 2
TeXDict begin 22 1 bop 602 70 a Fq(22)p 602 103 2699
4 v 808 333 a Fn(e\))32 b(Plot)i Fl(\022)1139 345 y Fh(C)1210
333 y Fe(\000)25 b Fn(sin\(4)p Fl(\022)1519 345 y Fh(C)1564
333 y Fn(\))p Fl(=)p Fn(4)32 b(for)h(0)40 b Fe(\024)g
Fl(\022)2073 345 y Fh(C)2159 333 y Fe(\024)f Fl(\031=)p
Fn(2.)66 b(What)33 b(is)h(its)g(maximum)808 432 y(value?)d(As)21
b Fl(\017)k Fe(!)f Fn(0)e(\(so)g(that)f(\(1)d Fe(\000)h
Fl(\017)p Fn(\))p Fl(=\017)k Fe(!)i(1)p Fn(\),)c(calculate)f(\(fr)o(om)
h(equation)i(4\))808 532 y(a)j(condition)h(on)g Fl(\025)1423
544 y Fh(1)1483 532 y Fn(that)g(ensur)o(es)f(ther)o(e)g(will)h(always)f
(be)g(a)g(solution)i(with)808 632 y Fl(\022)859 644 y
Fh(C)945 632 y Fl(<)42 b(\031=)p Fn(2.)68 b(This)34 b(de\002nes)g(a)g
(mar)o(ginal)f(phase)h(in)h(which)g(the)f(r)o(ecurr)o(ent)808
731 y(connections)26 b(cr)o(eate)e(a)h(tuned)g(output)h(even)f(fr)o(om)
g(untuned)h(input,)h(and)e(it)808 831 y(constitutes)c(what)g(is)g
(called)f(a)h(continuous)h(attractor)-6 b(.)704 997 y(2.)41
b(A)17 b(Hop\002eld)g(associative)g(memory)h(network)g(has)g
(activities)f(for)g(individual)808 1096 y(units,)g Fq(v)1072
1108 y Fi(a)1117 1096 y Fn(for)f Fq(a)23 b Fm(=)g Fn(1)p
Fl(;)14 b Fn(2)p Fl(;)g(:)g(:)g(:)d(;)j Fq(N)j Fn(\(or)f(collectively)g
Fb(v)p Fn(\),)g(that)g(take)g(values)f(of)h(either)808
1196 y Fm(+)p Fn(1)j(or)h Fe(\000)p Fn(1,)g(and)g(ar)o(e)f(updated)g
(at)h(every)f(discr)o(ete)h(time)g(step)g(of)h(the)f(network)808
1296 y(dynamics)h(by)f(the)h(r)o(ule)1494 1565 y Fq(v)1536
1577 y Fi(a)1566 1565 y Fn(\()p Fq(t)d Fm(+)g Fn(1\))k
Fm(=)g Fn(sgn)2028 1419 y Fk(0)2028 1487 y(B)2028 1510
y(B)2028 1533 y(B)2028 1555 y(B)2028 1578 y(B)2028 1601
y(@)2108 1459 y Fi(N)2073 1475 y Fk(X)2075 1664 y Fi(a)2101
1647 y Fa(0)2120 1664 y Fg(=)p Fh(1)2203 1565 y Fq(M)2281
1577 y Fi(aa)2333 1560 y Fa(0)2356 1565 y Fq(v)2398 1577
y Fi(a)2424 1560 y Fa(0)2447 1565 y Fn(\()p Fq(t)p Fn(\))2531
1419 y Fk(1)2531 1487 y(C)2531 1510 y(C)2531 1533 y(C)2531
1555 y(C)2531 1578 y(C)2531 1601 y(A)2592 1565 y Fl(;)590
b Fn(\(5\))808 1824 y(wher)o(e)1563 1962 y(sgn)q(\()p
Fq(z)p Fn(\))22 b Fm(=)1887 1839 y Fk(\()1977 1910 y
Fm(+)p Fn(1)82 b(if)69 b Fq(z)23 b Fe(\025)g Fn(0)1977
2009 y Fe(\000)p Fn(1)82 b(if)69 b Fq(z)23 b Fl(<)g Fn(0)14
b Fl(:)808 2163 y Fn(Her)o(e)25 b Fb(M)i Fn(is)h(a)e(matrix)h(constr)o
(ucted)g(fr)o(om)g Fq(P)f Fn(\223memory\224)h(vectors)g
Fb(v)3044 2133 y Fi(m)3121 2163 y Fn(\()p Fq(m)j Fm(=)808
2263 y Fn(1)p Fl(;)14 b Fn(2)p Fl(;)g(:)g(:)g(:)d Fq(P)p
Fn(\),)j(also)g(composed)h(of)f(elements)g(that)g(ar)o(e)e(either)i
Fm(+)p Fn(1)f(or)h Fe(\000)p Fn(1,)g(thr)o(ough)808 2362
y(the)20 b(sum)i(of)f(outer)f(pr)o(oducts)1594 2632 y
Fq(M)1672 2644 y Fi(aa)1724 2627 y Fa(0)1770 2632 y Fm(=)j
Fn(\(1)17 b Fe(\000)h Fl(\016)2051 2644 y Fi(aa)2103
2627 y Fa(0)2127 2632 y Fn(\))2208 2525 y Fi(P)2168 2542
y Fk(X)2169 2731 y Fi(m)p Fg(=)p Fh(1)2298 2632 y Fq(v)2340
2597 y Fi(m)2340 2652 y(a)2389 2632 y Fq(v)2431 2597
y Fi(m)2431 2654 y(a)2457 2637 y Fa(0)2493 2632 y Fl(:)689
b Fn(\(6\))808 2891 y(Note)18 b(that)f(the)h(diagonal)g(elements)g(of)g
Fb(M)g Fn(ar)o(e)e(set)i(to)g(zer)o(o)f(by)h(this)h(equation.)808
2990 y(Consider)30 b(a)h(100-element)e(network)i(\()p
Fq(N)39 b Fm(=)d Fn(100\).)57 b(Constr)o(uct)32 b Fq(P)e
Fn(memory)808 3090 y(states)20 b(by)g(randomly)h(assigning)h
Fm(+)p Fn(1)d(and)h Fe(\000)p Fn(1)g(values)g(with)h(equal)f(pr)o
(obabil-)808 3189 y(ities)k(to)g(the)f Fq(N)j Fn(elements)e(of)g(each)f
Fb(v)1991 3159 y Fi(m)2040 3189 y Fn(.)38 b(Using)24
b(these)g(memory)g(vectors,)g(set)808 3289 y(the)d(matrix)h(of)g
(synaptic)f(weights)i(accor)o(ding)e(to)h(equation)h(6.)31
b(Then,)22 b(study)808 3389 y(the)17 b(behavior)h(of)g(the)f(network)i
(by)f(iterating)f(equation)i(5.)27 b(T)-8 b(o)18 b(measur)o(e)f(how)808
3488 y(close)h(the)g(state)g(of)f(the)i(network)f(at)g(time)g
Fq(t)p Fn(,)g Fb(v)p Fn(\()p Fq(t)p Fn(\),)f(is)i(to)f(a)g(particular)e
(memory)808 3588 y(state,)j(de\002ne)h(the)h(overlap)e(function)i
Fq(q)p Fn(\()p Fq(t)p Fn(\))i Fm(=)f Fb(v)p Fn(\()p Fq(t)p
Fn(\))17 b Fe(\001)f Fb(v)2485 3558 y Fi(m)2535 3588
y Fl(=)-5 b Fq(N)r Fn(.)28 b(This)21 b(is)g(equal)f(to)g(1)808
3688 y(if)f Fb(v)p Fn(\()p Fq(t)p Fn(\))j Fm(=)g Fb(v)1155
3657 y Fi(m)1205 3688 y Fn(,)d(is)h(near)f(zer)o(o)f(if)h
Fb(v)p Fn(\()p Fq(t)p Fn(\))f(is)i(unr)o(elated)e(to)i
Fb(v)2491 3657 y Fi(m)2540 3688 y Fn(,)f(and)g(is)h(equal)f(to)h
Fe(\000)p Fn(1)e(if)808 3787 y Fb(v)p Fn(\()p Fq(t)p
Fn(\))25 b Fm(=)i Fe(\000)p Fb(v)1148 3757 y Fi(m)1197
3787 y Fn(.)36 b(Set)23 b(the)h(initial)g(state)f Fb(v)p
Fn(\(0\))f(so)i(that)f(it)h(has)f(a)g(positive)h(overlap,)808
3887 y Fq(q)p Fn(\(0\),)17 b(with)i(memory)g(state)e
Fb(v)1732 3857 y Fh(1)1766 3887 y Fn(.)28 b(Plot)18 b
Fq(q)p Fn(\()p Fq(t)p Fn(\))g(as)g(the)g(network)h(evolves)f(fr)o(om)f
(this)808 3987 y(state)25 b(accor)o(ding)f(to)i(equation)h(5.)42
b(Final)26 b(values)f(of)h Fq(q)p Fn(\()p Fq(t)p Fn(\))f(near)f(one)i
(indicate)808 4086 y(successful)f(r)o(ecovery)g(of)g(the)h(memory)-9
b(.)44 b(Do)27 b(the)e(same)h(starting)g(fr)o(om)f Fb(v)p
Fn(\(0\))808 4186 y(close)d(to)g(the)f(inverse)h(of)g(the)f(memory)i
(state)e Fe(\000)p Fb(v)2388 4156 y Fh(1)2421 4186 y
Fn(.)31 b(What)22 b(accounts)g(for)f(this)808 4285 y(behavior?)28
b(Determine)21 b(the)g(range)f(of)h Fq(q)p Fn(\(0\))f(values)g(\(about)
g Fb(v)2785 4255 y Fh(1)2819 4285 y Fn(\))g(that)h(assur)o(es)808
4385 y(successful)14 b(memory)h(r)o(ecovery)f(for)g(di)p
Fm(\013)p Fn(er)o(ent)g(values)g(of)h Fq(P)p Fn(.)26
b(Start)14 b(with)h Fq(P)23 b Fm(=)f Fn(1)808 4485 y(and)15
b(incr)o(ease)h(it)g(until)h(memory)g(r)o(ecovery)e(fails)h(even)g(for)
g Fq(q)p Fn(\(0\))23 b Fm(=)f Fn(1.)27 b(At)16 b(what)808
4584 y Fq(P)k Fn(value)g(does)h(this)g(occur?)704 4750
y(3.)41 b(Repeat)20 b(exer)o(cise)f(2)h(with)i(the)f(matrix)f
Fb(M)h Fn(r)o(eplaced)e(by)1461 5019 y Fq(M)1539 5031
y Fi(aa)1591 5015 y Fa(0)1638 5019 y Fm(=)j Fn(\(1)c
Fe(\000)g Fl(\016)1919 5031 y Fi(aa)1971 5015 y Fa(0)1994
5019 y Fn(\))2114 4913 y Fi(P)2074 4930 y Fk(X)2036 5119
y Fi(m)p Fj(;)p Fi(m)2141 5102 y Fa(0)2160 5119 y Fg(=)p
Fh(1)2242 5019 y Fq(v)2284 4985 y Fi(m)2284 5040 y(a)2333
5019 y Fq(C)2388 5031 y Fi(mm)2478 5015 y Fa(0)2502 5019
y Fq(v)2544 4985 y Fi(m)2589 4964 y Fa(0)2544 5042 y
Fi(a)2570 5025 y Fa(0)2626 5019 y Fl(;)p eop end
%%Page: 23 3
TeXDict begin 23 2 bop 3215 70 a Fq(23)p 600 103 2699
4 v 808 333 a Fn(wher)o(e)20 b Fq(C)1112 345 y Fi(mm)1202
328 y Fa(0)1247 333 y Fn(is)h(the)g Fq(m)p Fl(;)14 b
Fq(m)1628 303 y Ff(0)1673 333 y Fn(element)21 b(of)f(the)h(inverse)g
(of)g(the)f(matrix)1906 448 y Fi(N)1871 464 y Fk(X)1882
653 y Fi(a)p Fg(=)p Fh(1)2001 554 y Fq(v)2043 519 y Fi(m)2043
574 y(a)2092 554 y Fq(v)2134 519 y Fi(m)2179 498 y Fa(0)2134
574 y Fi(a)2216 554 y Fl(:)808 775 y Fn(Compar)o(e)27
b(the)i(performance)e(and)h(capacity)g(of)g(the)h(associative)f(memory)
808 875 y(constr)o(ucted)20 b(using)h(this)g(matrix)f(with)h(that)f(of)
g(the)g(associative)g(memory)h(in)808 975 y(exer)o(cise)e(2.)704
1126 y(4.)41 b(Build)26 b(and)g(study)h(a)f(simple)h(model)g(of)f
(oscillations)i(arising)f(fr)o(om)f(the)h(in-)808 1225
y(teraction)h(of)h(excitatory)f(and)g(inhibitory)j(populations)e(of)g
(neur)o(ons.)53 b(The)808 1325 y(\002ring)26 b(rate)f(of)g(the)h
(excitatory)f(neur)o(ons)h(is)g Fq(r)2271 1337 y Fh(E)2311
1325 y Fn(,)h(and)e(that)g(of)h(the)g(inhibitory)808
1425 y(neur)o(ons)c(is)g Fq(r)1241 1437 y Fh(I)1287 1425
y Fn(and)f(these)h(ar)o(e)e(characterized)g(by)i(equations)g(7.50)f
(and)g(7.51.)808 1524 y(Set)26 b Fq(M)1023 1536 y Fh(EE)1130
1524 y Fm(=)31 b Fn(1)p Fl(:)p Fn(25,)c Fq(M)1490 1536
y Fh(IE)1581 1524 y Fm(=)32 b Fn(1,)27 b Fq(M)1837 1536
y Fh(II)1913 1524 y Fm(=)k Fn(0,)d Fq(M)2169 1536 y Fh(EI)2260
1524 y Fm(=)j Fe(\000)p Fn(1,)d Fl(\015)2542 1536 y Fh(E)2613
1524 y Fm(=)k Fe(\000)p Fn(10)25 b(Hz,)j Fl(\015)3074
1536 y Fh(I)3130 1524 y Fm(=)j Fn(10)808 1624 y(Hz,)25
b Fl(\034)1008 1636 y Fh(E)1078 1624 y Fm(=)k Fn(10)24
b(ms,)j(and)e(vary)f(the)i(value)f(of)g Fl(\034)2295
1636 y Fh(I)2319 1624 y Fn(.)43 b(The)25 b(negative)g(value)g(of)g
Fl(\015)3260 1636 y Fh(E)808 1723 y Fn(means)d(that)g(this)h(parameter)
d(serves)i(as)g(a)g(sour)o(ce)f(of)i(backgr)o(ound)e(activity)808
1823 y(\(activity)15 b(in)i(the)f(absence)f(of)h(excitatory)f(input\))i
(rather)e(than)h(as)g(a)f(thr)o(eshold.)808 1923 y(Show)j(what)g
(happens)g(for)g Fl(\034)1734 1935 y Fh(I)1776 1923 y
Fm(=)g Fn(30)f(ms)h(and)g(for)g Fl(\034)2403 1935 y Fh(I)2445
1923 y Fm(=)f Fn(50)h(ms.)28 b(Find)18 b(the)h(value)808
2022 y(of)k Fl(\034)947 2034 y Fh(I)995 2022 y Fn(for)h(which)h(ther)o
(e)e(is)h(a)g(transition)h(between)f(\002xed-point)f(and)h(oscilla-)808
2122 y(tory)i(behavior)-6 b(,)26 b(ther)o(eby)g(verifying)f(the)i(r)o
(esults)e(obtained)h(analytically)g(in)808 2222 y(chapter)20
b(7)g(on)h(the)g(basis)g(of)g(equation)g(7.53.)704 2373
y(5.)41 b Fd(ma)-5 b(tlab)1063 2406 y @beginspecial 153
@llx 149 @lly 161 @urx 157 @ury 80 @rwi @setspecial
%%BeginDocument: tmR.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 149 161 157 
%%Title: tmR.eps
%%Creator: Canvas 
%%CreationDate: Monday, July 16, 2001
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ Deneba_CanvasGraphics
%%DocumentFonts: Palatino-Roman
%%DocumentSuppliedFonts: 
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Copyright: (C) 1996 Deneba Systems. All Rights Reserved
%%EndComments
%%BeginProlog
%%BeginResource: procset Deneba_CanvasGraphics
%%Title: Deneba standard graphics
%%Version: 1.0
%%CreationDate: 10/1/94
%%Copyright: (C) 1994 Deneba Systems. All Rights Reserved
userdict /Deneba_CanvasGraphics 300 dict put
Deneba_CanvasGraphics begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
/initialize
{Deneba_CanvasGraphics
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{
	/sa /setstrokeadjust load def
	/li /lineto load def
	/mt /moveto load def
	/ct /curveto load def
	/lh { currentpoint exch pop lineto}bind def
	/lv { currentpoint pop exch lineto}bind def}
{
/sa
{
	{/_xl
	{transform
	.25 sub round .25 add exch
	.25 sub round .25 add exch
	itransform
	}bind def
	/li{ _xl lineto}bind def
	/mt{ _xl moveto}bind def
	/ct{ _xl curveto}bind def
	/lh { dup _xl pop currentpoint exch pop lineto}bind def
	/lv { dup _xl pop currentpoint pop exch lineto}bind def
	/rp{_xl/cv_b xdf/cv_r xdf
	_xl/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath
	}def}
	{/li{lineto} def
	/mt{moveto} def
	/ct{curveto} def
	/lh{currentpoint exch pop lineto}def
	/lv{currentpoint pop exch lineto}def
	/rp
	{/cv_b xdf/cv_r xdf
	/cv_t xdf/cv_l xdf
	cv_l cv_t moveto
	cv_r cv_t lineto
	cv_r cv_b lineto
	cv_l cv_b lineto
	closepath}def}ifelse}def
}ifelse
}def
/terminate
{
currentdict Deneba_CanvasGraphics eq{end}if}def
/mxMax 8 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx get currentmatrix pop
/mxIdx mxIdx 1 add store}def
/rtm{/mxIdx mxIdx 1 sub store
mxStk mxIdx get setmatrix}def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 10 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/st0 null def
/st1 null def
/st2 null def
/st3 null def
/st4 null def
/stb 256 string def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
Deneba_CanvasGraphics /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 6 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/mh{currentpoint exch pop moveto}def
/mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{$eps{systemdict /setgray get exec}{setgray}ifelse}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{
/setcmykcolor where {pop true}{false}ifelse
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}
	{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat 1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop pop}def}ifelse
}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix {currentfile st0 readhexstring pop}image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[{currentfile st0 readhexstring pop}/exec load
/dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[{currentfile st0 readhexstring pop}/exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[{currentfile st0 readhexstring pop} /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def/doclutimage{/hival 255 def
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/DataSource{currentfile st0 readhexstring pop}def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 12 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/$rhs0 {currentfile st0 readhexstring pop}def
/$rhs1 {currentfile st1 readhexstring pop}def
/$rhs2 {currentfile st2 readhexstring pop}def
/$rhs3 {currentfile st3 readhexstring pop}def
/$rhs4 {currentfile st4 readhexstring pop}def
/$rs0 {currentfile st0 readstring pop}def
/$rs1 {currentfile st1 readstring pop}def
/$rs2 {currentfile st2 readstring pop}def
/$rs3 {currentfile st3 readstring pop}def
/$rs4 {currentfile st4 readstring pop}def
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}{false} ifelse}ifelse
def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{exch
1 index 0 eq{dup dup/Width get exch /Decode get length 2 div mul cvi}{dup/Width get}ifelse
/st0 exch string def
begin
/MultipleDataSources false def
dup 0 eq{pop/DataSource /$rhs0 load def}
{1 eq{/DataSource /$rs0 load def}{/DataSource currentfile /ASCII85Decode filter def}ifelse}ifelse
currentdict end
%level2{image}
true
{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}if}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{pop gsave $i setmatrix translate scale
cvi/_h xdf cvi/_w xdf/st0 _w string def pop doclutimage grestore}def
/c3{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace 0 0 0 setrgbcolor}if
_imagedict begin
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
/Decode [0 1 0 1 0 1]def 
currentdict end exch
doimage
imagesave restore}def
/ca{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{_cs setcolorspace}if
_imagedict begin
/Decode[0 100 -128 127 -128 127]def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/c4{/imagesave save def
/$src xdf $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2 {/DeviceCMYK setcolorspace 0 0 0 0 setcmykcolor}if
_imagedict begin
/Decode [0 1 0 1 0 1 0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage
imagesave restore}def
/im{/imagesave save def
pop $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
level2{/DeviceGray setcolorspace 0 setgray}if
_imagedict begin
/Decode [0 1] def  
/Width _w def
/Height _h def
/ImageMatrix _imatrix def
currentdict end exch
doimage 
imagesave restore}def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{/imagesave save def $i setmatrix translate scale cvi/_h xdf cvi/_w xdf
/st0 _w 7 add 8 div cvi string def _w _h false _imatrix 5 -1 roll 0 eq {{$rhs0}}{{$rs0}}ifelse imagemask imagesave restore}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/$cvfontdict 150 dict begin  /Symbol {/Symbol /Symbol /Symbol -1} def currentdict end def
/rfp{/_encodindex xdf
FontDirectory 3 index known
not{
dup FontDirectory exch known{exch pop}{pop}ifelse
 findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
dup
currentdict end
definefont pop}{pop pop}ifelse} def
/rf{3 index 6 1 roll
counttomark array astore cvx exch pop
$cvfontdict 3 1 roll put}def
/cvsf{$cvfontdict exch get exec rfp findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll $cvfontdict exch get exec rfp
findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch _fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{Deneba_CanvasGraphics begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh
FontDirectory 1 index known
{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{boldproc}exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx
exch pop
$cvfontdict
exch 2 index exch put}ifelse}def/mo{dup dhOdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{outproc} exch
mkFT pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/ms{
dup dhSdh
FontDirectory 1 index known{exch pop}{dup 2 index
$cvfontdict exch get
exec
rfp
findfont{ShadChar} exch
mkFT
pop pop pop
dup 3 -1 roll
mark 3 1 roll dup -1
counttomark array astore cvx 		
exch pop
$cvfontdict 
exch 2 index exch put}ifelse}def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentgray 1.0 setgray
chrst 0 0 moveto show setgray
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/bc{save 11 1 roll 10 dict begin/BBox 5 1 roll 4 array astore def/Matrix 7 1 roll 6 array astore def
/FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/DSIEndPaintProc{currentdict end}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/initfonts{level2{$cvfontdict dup { pop 1 index exch undef}forall pop}if
$cvfontdict begin /Symbol {/Symbol /Symbol /Symbol -1}def end}def
initialize
end
%%EndResource
Deneba_CanvasGraphics begin

_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put

_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
mark /___FN3 /Palatino-Roman dup 1 rf
F debug
0 id
1 fd
0 306 translate
1 -1 scale
%%EndSetup
/DeviceRGB scs
0. fg
0.125 0.125 sp
1 lc
50. lm
0 lj
T sa
%%DSIBeginObject: #1 - Ref:2 Text
0. fg
stm
7. fts
/___FN3 cvsf
0. fg
F sa
155. 154.7399 mt
(\250) show
T sa
rtm
%%DSIEndObject
terminate
showpage

%%EndDocument
 @endspecial 1154 2373 a Fn(\002les)29 b Fc(c7p5.m)e
Fn(and)h Fc(c7p5sub.m)d Fn(perform)j(a)g(numerical)h(integra-)808
2472 y(tion)i(of)g(a)f(two-unit,)k(nonlinear)-6 b(,)33
b(symmetric)f(r)o(ecurr)o(ent)d(network)i(with)g(a)808
2572 y(thr)o(eshold)23 b(linear)g(activation)g(function)h
Fq(F)p Fn(\()p Fq(I)r Fn(\))h Fm(=)h Fl(\014)p Fn([)p
Fq(I)r Fn(])2500 2584 y Fg(+)2565 2572 y Fn(and)c(plot)i(the)f(r)o
(esults.)808 2672 y(Her)o(e,)c(the)i(dynamics)g(come)g(fr)o(om)1646
2810 y Fq(d)p Fb(v)p 1646 2846 88 5 v 1655 2923 a Fq(dt)1767
2866 y Fm(=)i Fe(\000)p Fb(v)18 b Fm(+)g Fb(F)p Fn(\()p
Fb(M)g Fe(\001)g Fb(v)h Fm(+)f Fb(h)p Fn(\))808 3038
y(with)23 b Fb(v)i Fm(=)g Fn(\()p Fq(v)1221 3050 y Fh(1)1254
3038 y Fl(;)14 b Fq(v)1331 3050 y Fh(2)1363 3038 y Fn(\))22
b(and)g Fq(h)1618 3050 y Fh(1)1676 3038 y Fm(=)j Fq(h)1799
3050 y Fh(2)1857 3038 y Fm(=)g Fn(1.)33 b(The)23 b(weight)g(matrix)f
(in)h(this)g(example)808 3138 y(is)18 b Fb(M)23 b Fm(=)g
Fn([0)17 b Fe(\000)p Fn(1)g(;)h Fe(\000)p Fn(1)g(0],)f(which)i(tends)f
(to)g(make)g Fq(v)2350 3150 y Fh(1)2401 3138 y Fn(and)f
Fq(v)2601 3150 y Fh(2)2652 3138 y Fn(compete.)28 b(Execute)808
3237 y Fc(c7p5.m)23 b Fn(to)k(see)f(the)g(consequences)h(of)g(r)o
(egimes)f(of)g(high)h(\()p Fl(\014)j Fm(=)g Fn(2\))25
b(and)h(low)808 3337 y(\()p Fl(\014)d Fm(=)g Fn(0)p Fl(:)p
Fn(5\))d(activation)h(\(which)g(is)h(equivalent)g(to)f(lar)o(ge)f(and)h
(small)h(r)o(ecurr)o(ent)808 3437 y(weights\).)29 b(For)21
b(these)g(two)g(values)g(of)f Fl(\014)p Fn(,)g(plot)i(the)f(nullclines)
h(\(the)e(locations)808 3536 y(in)15 b(the)g Fq(v)1067
3548 y Fh(1)1100 3536 y Fn(-)p Fq(v)1170 3548 y Fh(2)1217
3536 y Fn(phase)f(plane)h(wher)o(e)f Fq(dv)1992 3548
y Fh(1)2024 3536 y Fl(=)p Fq(dt)22 b Fm(=)h Fn(0)14 b(and)h
Fq(dv)2530 3548 y Fh(2)2562 3536 y Fl(=)p Fq(dt)22 b
Fm(=)g Fn(0\).)k(Y)-8 b(ou)16 b(should)808 3636 y(\002nd)28
b(one)h(\002xed)f(point)i(for)e Fl(\014)33 b Fm(=)h Fn(0)p
Fl(:)p Fn(5)27 b(and)h(thr)o(ee)g(for)g Fl(\014)34 b
Fm(=)f Fn(2.)52 b(Linearize)27 b(the)808 3736 y(network)18
b(about)h(the)f(\002xed)g(point)h(with)g Fq(v)2140 3748
y Fh(1)2195 3736 y Fm(=)k Fq(v)2316 3748 y Fh(2)2367
3736 y Fn(and)18 b(derive)f(a)h(condition)h(on)808 3835
y Fl(\014)k Fn(for)i(this)g(\002xed)f(point)h(to)f(be)g(stable.)39
b(\(Based)23 b(on)i(a)f(pr)o(oblem)g(fr)o(om)g(Dawei)808
3935 y(Dong.\))704 4086 y(6.)41 b(Plot)27 b(the)h(r)o(esults)f(of)g
(exer)o(cise)f(5)g(for)h(the)g(inputs)h Fb(h)k Fm(=)f
Fn(\(0)p Fl(:)p Fn(75)p Fl(;)14 b Fn(1)p Fl(:)p Fn(25\))23
b(and)k Fb(h)k Fm(=)808 4185 y Fn(\(0)p Fl(:)p Fn(5)p
Fl(;)14 b Fn(1)p Fl(:)p Fn(5\).)62 b(By)33 b(plotting)h(nullclines)g
(for)f(these)g(values)g(of)g Fb(h)p Fn(,)i(explain)e(the)808
4285 y(r)o(esulting)20 b(behavior)-6 b(.)29 b(\(Based)19
b(on)j(a)e(pr)o(oblem)g(fr)o(om)h(Dawei)f(Dong.\))704
4436 y(7.)41 b(Use)20 b(the)h(expr)o(ession)1237 4642
y Fq(f)1260 4654 y Fi(u)1297 4642 y Fn(\()p Fq(s)e Fe(\000)f
Fl(\030;)g Fq(g)g Fe(\000)g Fl(\015)p Fn(\))23 b Fm(=)f
Fq(A)14 b Fn(exp)2065 4518 y Fk( )2099 4642 y Fe(\000)2165
4584 y Fn(\()p Fq(s)k Fe(\000)g Fl(\030)p Fn(\))2390
4554 y Fh(2)p 2164 4622 259 5 v 2233 4706 a Fn(2)p Fl(\033)2321
4676 y Fh(2)2321 4724 y Fi(s)2433 4518 y Fk(!)2480 4642
y Fq(N)2561 4518 y Fk( )2608 4579 y Fq(g)g Fe(\000)g
Fl(\015)p 2604 4622 187 5 v 2656 4699 a(\033)2705 4711
y Fi(g)2801 4518 y Fk(!)2862 4642 y Fl(;)808 4841 y Fn(wher)o(e)29
b Fq(A)p Fn(,)k Fl(\030)p Fn(,)g Fl(\033)1325 4853 y
Fi(s)1351 4841 y Fn(,)g Fl(\015)p Fn(,)g(and)d Fl(\033)1727
4853 y Fi(g)1790 4841 y Fn(ar)o(e)f(parameters)g(and)h
Fq(N)i Fn(is)f(the)f(\(sigmoidal\))808 4941 y(cumulative)20
b(normal)h(function)1155 5124 y Fq(N)r Fn(\()p Fq(z)p
Fn(\))h Fm(=)1416 5005 y Fk(Z)1511 5028 y Fi(z)1472 5201
y Ff(\0001)1581 5124 y Fq(dx)1759 5068 y Fn(1)p 1694
5104 172 5 v 1708 5129 a Fe(p)p 1770 5129 96 5 v 1770
5201 a Fn(2)p Fl(\031)1889 5124 y Fn(exp)2036 5001 y
Fk( )2069 5124 y Fe(\000)2135 5068 y Fq(x)2177 5038 y
Fh(2)p 2135 5104 75 5 v 2151 5181 a Fn(2)2219 5001 y
Fk(!)2276 5124 y Fm(=)g Fn(1)c Fe(\000)2498 5068 y Fn(1)p
2498 5104 42 5 v 2498 5181 a(2)2550 5124 y(erfc)2701
5001 y Fk( )2784 5068 y Fq(z)p 2744 5104 117 5 v 2758
5129 a Fe(p)p 2819 5129 42 5 v 72 x Fn(2)2871 5001 y
Fk(!)2932 5124 y Fl(:)p eop end
%%Page: 24 4
TeXDict begin 24 3 bop 602 70 a Fq(24)p 602 103 2699
4 v 808 333 a Fn(Plot)41 b Fq(f)1018 345 y Fi(u)1055
333 y Fn(\()p Fq(s)22 b Fe(\000)h Fl(\030;)18 b Fq(g)k
Fe(\000)h Fl(\015)p Fn(\))28 b(and)g(\002nd)h(values)f(of)g(the)h
(parameters)e(that)i(make)f(it)808 432 y(r)o(oughly)h(match)h(the)f
(gain-modulated)g(r)o(esponse)g(of)g(\002gur)o(e)g(7.6B.)53
b(Using)808 532 y Fq(w)p Fn(\()p Fl(\030;)14 b(\015)p
Fn(\))31 b Fm(=)g Fn(exp)o(\()p Fe(\000)p Fn(\()p Fl(\030)21
b Fm(+)h Fl(\015)p Fn(\))1634 502 y Fh(2)1667 532 y Fl(=)p
Fn(2)p Fl(\033)1794 502 y Fh(2)1794 552 y Fi(w)1839 532
y Fn(\),)28 b(evaluate)d(the)i(integral)g(in)g(equation)h(7.15)808
632 y(in)33 b(terms)g(of)g(a)g(single)g(cumulative)g(normal)h(function)
f(to)h(show)g(that)f(the)808 731 y(r)o(esulting)d(tuning)i(curves)e(ar)
o(e)g(functions)h(of)g Fq(s)24 b Fm(+)k Fq(g)p Fn(,)k(and)f(assess)f
(how)i(the)808 831 y(tuning)21 b(width)h(depends)e(on)h
Fl(\033)1808 843 y Fi(s)1835 831 y Fl(;)14 b(\033)1919
843 y Fi(g)1972 831 y Fn(and)21 b Fl(\033)2180 843 y
Fi(w)2226 831 y Fn(.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
